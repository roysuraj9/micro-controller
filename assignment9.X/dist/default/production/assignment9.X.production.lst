

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Sep 25 20:58:42 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     009F                     	;# 
   112     010C                     	;# 
   113     010D                     	;# 
   114     010E                     	;# 
   115     010F                     	;# 
   116     018C                     	;# 
   117     018D                     	;# 
   118     0000                     	;# 
   119     0001                     	;# 
   120     0002                     	;# 
   121     0003                     	;# 
   122     0004                     	;# 
   123     0005                     	;# 
   124     0006                     	;# 
   125     0007                     	;# 
   126     0008                     	;# 
   127     0009                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     000E                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0011                     	;# 
   137     0012                     	;# 
   138     0013                     	;# 
   139     0014                     	;# 
   140     0015                     	;# 
   141     0015                     	;# 
   142     0016                     	;# 
   143     0017                     	;# 
   144     0018                     	;# 
   145     0019                     	;# 
   146     001A                     	;# 
   147     001B                     	;# 
   148     001B                     	;# 
   149     001C                     	;# 
   150     001D                     	;# 
   151     001E                     	;# 
   152     001F                     	;# 
   153     0081                     	;# 
   154     0085                     	;# 
   155     0086                     	;# 
   156     0087                     	;# 
   157     0088                     	;# 
   158     0089                     	;# 
   159     008C                     	;# 
   160     008D                     	;# 
   161     008E                     	;# 
   162     0091                     	;# 
   163     0092                     	;# 
   164     0093                     	;# 
   165     0094                     	;# 
   166     0098                     	;# 
   167     0099                     	;# 
   168     009C                     	;# 
   169     009D                     	;# 
   170     009E                     	;# 
   171     009F                     	;# 
   172     010C                     	;# 
   173     010D                     	;# 
   174     010E                     	;# 
   175     010F                     	;# 
   176     018C                     	;# 
   177     018D                     	;# 
   178     0000                     	;# 
   179     0001                     	;# 
   180     0002                     	;# 
   181     0003                     	;# 
   182     0004                     	;# 
   183     0005                     	;# 
   184     0006                     	;# 
   185     0007                     	;# 
   186     0008                     	;# 
   187     0009                     	;# 
   188     000A                     	;# 
   189     000B                     	;# 
   190     000C                     	;# 
   191     000D                     	;# 
   192     000E                     	;# 
   193     000E                     	;# 
   194     000F                     	;# 
   195     0010                     	;# 
   196     0011                     	;# 
   197     0012                     	;# 
   198     0013                     	;# 
   199     0014                     	;# 
   200     0015                     	;# 
   201     0015                     	;# 
   202     0016                     	;# 
   203     0017                     	;# 
   204     0018                     	;# 
   205     0019                     	;# 
   206     001A                     	;# 
   207     001B                     	;# 
   208     001B                     	;# 
   209     001C                     	;# 
   210     001D                     	;# 
   211     001E                     	;# 
   212     001F                     	;# 
   213     0081                     	;# 
   214     0085                     	;# 
   215     0086                     	;# 
   216     0087                     	;# 
   217     0088                     	;# 
   218     0089                     	;# 
   219     008C                     	;# 
   220     008D                     	;# 
   221     008E                     	;# 
   222     0091                     	;# 
   223     0092                     	;# 
   224     0093                     	;# 
   225     0094                     	;# 
   226     0098                     	;# 
   227     0099                     	;# 
   228     009C                     	;# 
   229     009D                     	;# 
   230     009E                     	;# 
   231     009F                     	;# 
   232     010C                     	;# 
   233     010D                     	;# 
   234     010E                     	;# 
   235     010F                     	;# 
   236     018C                     	;# 
   237     018D                     	;# 
   238     0000                     	;# 
   239     0001                     	;# 
   240     0002                     	;# 
   241     0003                     	;# 
   242     0004                     	;# 
   243     0005                     	;# 
   244     0006                     	;# 
   245     0007                     	;# 
   246     0008                     	;# 
   247     0009                     	;# 
   248     000A                     	;# 
   249     000B                     	;# 
   250     000C                     	;# 
   251     000D                     	;# 
   252     000E                     	;# 
   253     000E                     	;# 
   254     000F                     	;# 
   255     0010                     	;# 
   256     0011                     	;# 
   257     0012                     	;# 
   258     0013                     	;# 
   259     0014                     	;# 
   260     0015                     	;# 
   261     0015                     	;# 
   262     0016                     	;# 
   263     0017                     	;# 
   264     0018                     	;# 
   265     0019                     	;# 
   266     001A                     	;# 
   267     001B                     	;# 
   268     001B                     	;# 
   269     001C                     	;# 
   270     001D                     	;# 
   271     001E                     	;# 
   272     001F                     	;# 
   273     0081                     	;# 
   274     0085                     	;# 
   275     0086                     	;# 
   276     0087                     	;# 
   277     0088                     	;# 
   278     0089                     	;# 
   279     008C                     	;# 
   280     008D                     	;# 
   281     008E                     	;# 
   282     0091                     	;# 
   283     0092                     	;# 
   284     0093                     	;# 
   285     0094                     	;# 
   286     0098                     	;# 
   287     0099                     	;# 
   288     009C                     	;# 
   289     009D                     	;# 
   290     009E                     	;# 
   291     009F                     	;# 
   292     010C                     	;# 
   293     010D                     	;# 
   294     010E                     	;# 
   295     010F                     	;# 
   296     018C                     	;# 
   297     018D                     	;# 
   298     0008                     _PORTD	set	8
   299     001E                     _ADRESH	set	30
   300     0049                     _RE1	set	73
   301     004A                     _RE2	set	74
   302     00FA                     _nDONE	set	250
   303     00FA                     _GO	set	250
   304     00FB                     _CHS0	set	251
   305     00FC                     _CHS1	set	252
   306     00FD                     _CHS2	set	253
   307     00F8                     _ADON	set	248
   308     0088                     _TRISD	set	136
   309     009E                     _ADRESL	set	158
   310     0449                     _TRISE1	set	1097
   311     044A                     _TRISE2	set	1098
   312     04FF                     _ADFM	set	1279
   313                           
   314                           	psect	strings
   315     0003                     __pstrings:
   316     0003                     stringtab:
   317     0003                     __stringtab:
   318                           
   319                           ;	String table - string pointers are 1 byte each
   320     0003  1BFF               	btfsc	btemp+1,7
   321     0004  280D               	ljmp	stringcode
   322     0005  1383               	bcf	3,7
   323     0006  187F               	btfsc	btemp+1,0
   324     0007  1783               	bsf	3,7
   325     0008  0800               	movf	0,w
   326     0009  0A84               	incf	4,f
   327     000A  1903               	skipnz
   328     000B  0AFF               	incf	btemp+1,f
   329     000C  0008               	return
   330     000D                     stringcode:
   331     000D                     stringdir:
   332     000D  3000               	movlw	high stringdir
   333     000E  008A               	movwf	10
   334     000F  0804               	movf	4,w
   335     0010  0A84               	incf	4,f
   336     0011  0782               	addwf	2,f
   337     0012                     __stringbase:
   338     0012  3400               	retlw	0
   339     0013                     __end_of__stringtab:
   340     0013                     STR_3:
   341     0013  344C               	retlw	76	;'L'
   342     0014  344D               	retlw	77	;'M'
   343     0015  3433               	retlw	51	;'3'
   344     0016  3435               	retlw	53	;'5'
   345     0017  3420               	retlw	32	;' '
   346     0018  3454               	retlw	84	;'T'
   347     0019  3445               	retlw	69	;'E'
   348     001A  344D               	retlw	77	;'M'
   349     001B  3450               	retlw	80	;'P'
   350     001C  3420               	retlw	32	;' '
   351     001D  3453               	retlw	83	;'S'
   352     001E  3445               	retlw	69	;'E'
   353     001F  344E               	retlw	78	;'N'
   354     0020  3453               	retlw	83	;'S'
   355     0021  344F               	retlw	79	;'O'
   356     0022  3452               	retlw	82	;'R'
   357     0023  3400               	retlw	0
   358     0024                     STR_1:
   359     0024  3454               	retlw	84	;'T'
   360     0025  3445               	retlw	69	;'E'
   361     0026  344D               	retlw	77	;'M'
   362     0027  3450               	retlw	80	;'P'
   363     0028  3445               	retlw	69	;'E'
   364     0029  3452               	retlw	82	;'R'
   365     002A  3441               	retlw	65	;'A'
   366     002B  3454               	retlw	84	;'T'
   367     002C  3455               	retlw	85	;'U'
   368     002D  3452               	retlw	82	;'R'
   369     002E  3445               	retlw	69	;'E'
   370     002F  343A               	retlw	58	;':'
   371     0030  3400               	retlw	0
   372     0031                     STR_2:
   373     0031  3443               	retlw	67	;'C'
   374     0032  3400               	retlw	0
   375                           
   376                           	psect	cinit
   377     07FC                     start_initialization:	
   378                           ; #config settings
   379                           
   380     07FC                     __initialization:
   381     07FC                     end_of_initialization:	
   382                           ;End of C runtime variable initialization code
   383                           
   384     07FC                     __end_of__initialization:
   385     07FC  0183               	clrf	3
   386     07FD  120A  118A  2E04   	ljmp	_main	;jump to C main() function
   387                           
   388                           	psect	cstackCOMMON
   389     0070                     __pcstackCOMMON:
   390     0070                     ?_init_adc:
   391     0070                     ??_init_adc:	
   392                           ; 1 bytes @ 0x0
   393                           
   394     0070                     ?_clcd_write:	
   395                           ; 1 bytes @ 0x0
   396                           
   397     0070                     ?_init_display_controller:	
   398                           ; 1 bytes @ 0x0
   399                           
   400     0070                     ?_init_clcd:	
   401                           ; 1 bytes @ 0x0
   402                           
   403     0070                     ?_init_config:	
   404                           ; 1 bytes @ 0x0
   405                           
   406     0070                     ?_main:	
   407                           ; 1 bytes @ 0x0
   408                           
   409     0070                     ?_read_adc:	
   410                           ; 1 bytes @ 0x0
   411                           
   412     0070                     ?___wmul:	
   413                           ; 2 bytes @ 0x0
   414                           
   415     0070                     ?___lwmod:	
   416                           ; 2 bytes @ 0x0
   417                           
   418     0070                     clcd_write@mode:	
   419                           ; 2 bytes @ 0x0
   420                           
   421     0070                     ___wmul@multiplier:	
   422                           ; 1 bytes @ 0x0
   423                           
   424     0070                     ___lwmod@divisor:	
   425                           ; 2 bytes @ 0x0
   426                           
   427                           
   428                           ; 2 bytes @ 0x0
   429     0070                     	ds	1
   430     0071                     ??_clcd_write:
   431                           
   432                           ; 1 bytes @ 0x1
   433     0071                     	ds	1
   434     0072                     ??_read_adc:
   435     0072                     read_adc@adc_reg_val:	
   436                           ; 1 bytes @ 0x2
   437                           
   438     0072                     ___wmul@multiplicand:	
   439                           ; 2 bytes @ 0x2
   440                           
   441     0072                     ___lwmod@dividend:	
   442                           ; 2 bytes @ 0x2
   443                           
   444                           
   445                           ; 2 bytes @ 0x2
   446     0072                     	ds	1
   447     0073                     clcd_write@byte:
   448                           
   449                           ; 1 bytes @ 0x3
   450     0073                     	ds	1
   451     0074                     ??_init_display_controller:
   452     0074                     ?_clcd_putch:	
   453                           ; 1 bytes @ 0x4
   454                           
   455     0074                     ?_clcd_print:	
   456                           ; 1 bytes @ 0x4
   457                           
   458     0074                     ??___wmul:	
   459                           ; 1 bytes @ 0x4
   460                           
   461     0074                     ??___lwmod:	
   462                           ; 1 bytes @ 0x4
   463                           
   464     0074                     clcd_putch@addr:	
   465                           ; 1 bytes @ 0x4
   466                           
   467     0074                     clcd_print@str:	
   468                           ; 1 bytes @ 0x4
   469                           
   470     0074                     ___wmul@product:	
   471                           ; 2 bytes @ 0x4
   472                           
   473                           
   474                           ; 2 bytes @ 0x4
   475     0074                     	ds	1
   476     0075                     ??_clcd_putch:
   477     0075                     clcd_putch@data:	
   478                           ; 1 bytes @ 0x5
   479                           
   480     0075                     ___lwmod@counter:	
   481                           ; 1 bytes @ 0x5
   482                           
   483                           
   484                           ; 1 bytes @ 0x5
   485     0075                     	ds	1
   486     0076                     ??_init_clcd:
   487     0076                     ??_init_config:	
   488                           ; 1 bytes @ 0x6
   489                           
   490     0076                     ?___lwdiv:	
   491                           ; 1 bytes @ 0x6
   492                           
   493     0076                     clcd_print@addr:	
   494                           ; 2 bytes @ 0x6
   495                           
   496     0076                     ___lwdiv@divisor:	
   497                           ; 1 bytes @ 0x6
   498                           
   499                           
   500                           ; 2 bytes @ 0x6
   501     0076                     	ds	1
   502     0077                     ??_clcd_print:
   503                           
   504                           ; 1 bytes @ 0x7
   505     0077                     	ds	1
   506     0078                     ___lwdiv@dividend:
   507                           
   508                           ; 2 bytes @ 0x8
   509     0078                     	ds	2
   510     007A                     ??___lwdiv:
   511                           
   512                           ; 1 bytes @ 0xA
   513     007A                     	ds	1
   514     007B                     ___lwdiv@quotient:
   515                           
   516                           ; 2 bytes @ 0xB
   517     007B                     	ds	2
   518     007D                     ___lwdiv@counter:
   519                           
   520                           ; 1 bytes @ 0xD
   521     007D                     	ds	1
   522     007E                     ??_display:
   523     007E                     ??_main:	
   524                           ; 1 bytes @ 0xE
   525                           
   526                           
   527                           	psect	cstackBANK0
   528     0020                     __pcstackBANK0:	
   529                           ; 1 bytes @ 0xE
   530                           
   531     0020                     ?_display:
   532     0020                     display@adc_reg_val:	
   533                           ; 1 bytes @ 0x0
   534                           
   535                           
   536                           ; 2 bytes @ 0x0
   537     0020                     	ds	2
   538     0022                     display@buff:
   539                           
   540                           ; 3 bytes @ 0x2
   541     0022                     	ds	3
   542     0025                     display@i:
   543                           
   544                           ; 2 bytes @ 0x5
   545     0025                     	ds	2
   546     0027                     main@adc_reg_val:
   547                           
   548                           ; 2 bytes @ 0x7
   549     0027                     	ds	2
   550                           
   551                           	psect	maintext
   552     0604                     __pmaintext:	
   553 ;;
   554 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   555 ;;
   556 ;; *************** function _main *****************
   557 ;; Defined at:
   558 ;;		line 50 in file "main.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;  adc_reg_val     2    7[BANK0 ] unsigned short 
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : B00/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   572 ;;      Params:         0       0       0       0       0
   573 ;;      Locals:         0       2       0       0       0
   574 ;;      Temps:          0       0       0       0       0
   575 ;;      Totals:         0       2       0       0       0
   576 ;;Total ram usage:        2 bytes
   577 ;; Hardware stack levels required when called: 4
   578 ;; This function calls:
   579 ;;		_clcd_print
   580 ;;		_display
   581 ;;		_init_config
   582 ;;		_read_adc
   583 ;; This function is called by:
   584 ;;		Startup code after reset
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588     0604                     _main:	
   589                           ;psect for function _main
   590                           
   591     0604                     l997:	
   592                           ;incstack = 0
   593                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   594                           
   595     0604  120A  118A  25B1  120A  118A  	fcall	_init_config
   596     0609                     l999:
   597     0609  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   598     060A  00F4               	movwf	clcd_print@str
   599     060B  3080               	movlw	128
   600     060C  00F5               	movwf	clcd_print@str+1
   601     060D  3080               	movlw	128
   602     060E  00F6               	movwf	clcd_print@addr
   603     060F  120A  118A  262C  120A  118A  	fcall	_clcd_print
   604     0614                     l1001:
   605     0614  120A  118A  25CD  120A  118A  	fcall	_read_adc
   606     0619  0871               	movf	?_read_adc+1,w
   607     061A  1283               	bcf	3,5	;RP0=0, select bank0
   608     061B  1303               	bcf	3,6	;RP1=0, select bank0
   609     061C  00A8               	movwf	main@adc_reg_val+1
   610     061D  0870               	movf	?_read_adc,w
   611     061E  00A7               	movwf	main@adc_reg_val
   612     061F                     l1003:
   613     061F  0828               	movf	main@adc_reg_val+1,w
   614     0620  00A1               	movwf	display@adc_reg_val+1
   615     0621  0827               	movf	main@adc_reg_val,w
   616     0622  00A0               	movwf	display@adc_reg_val
   617     0623  120A  118A  2772  120A  118A  	fcall	_display
   618     0628  2E14               	goto	l1001
   619     0629  120A  118A  2800   	ljmp	start
   620     062C                     __end_of_main:
   621                           
   622                           	psect	text1
   623     05CD                     __ptext1:	
   624 ;; *************** function _read_adc *****************
   625 ;; Defined at:
   626 ;;		line 23 in file "adc.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  adc_reg_val     2    2[COMMON] unsigned short 
   631 ;; Return value:  Size  Location     Type
   632 ;;                  2    0[COMMON] unsigned short 
   633 ;; Registers used:
   634 ;;		wreg
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         2       0       0       0       0
   641 ;;      Locals:         2       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0
   643 ;;      Totals:         4       0       0       0       0
   644 ;;Total ram usage:        4 bytes
   645 ;; Hardware stack levels used: 1
   646 ;; This function calls:
   647 ;;		Nothing
   648 ;; This function is called by:
   649 ;;		_main
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653     05CD                     _read_adc:	
   654                           ;psect for function _read_adc
   655                           
   656     05CD                     l967:	
   657                           ;incstack = 0
   658                           ; Regs used in _read_adc: [wreg]
   659                           
   660                           
   661                           ;adc.c: 26:     unsigned short int adc_reg_val;;adc.c: 29:     GO = 1;
   662     05CD  1283               	bcf	3,5	;RP0=0, select bank0
   663     05CE  1303               	bcf	3,6	;RP1=0, select bank0
   664     05CF  151F               	bsf	31,2	;volatile
   665     05D0                     l24:	
   666                           ;adc.c: 32:     while (nDONE);
   667                           
   668     05D0  191F               	btfsc	31,2	;volatile
   669     05D1  2DD3               	goto	u451
   670     05D2  2DD4               	goto	u450
   671     05D3                     u451:
   672     05D3  2DD0               	goto	l24
   673     05D4                     u450:
   674     05D4                     l969:
   675                           
   676                           ;adc.c: 35:     adc_reg_val = (ADRESH << 8) | ADRESL;
   677     05D4  081E               	movf	30,w	;volatile
   678     05D5  00F3               	movwf	read_adc@adc_reg_val+1
   679     05D6  1683               	bsf	3,5	;RP0=1, select bank1
   680     05D7  1303               	bcf	3,6	;RP1=0, select bank1
   681     05D8  081E               	movf	30,w	;volatile
   682     05D9  00F2               	movwf	read_adc@adc_reg_val
   683                           
   684                           ;adc.c: 37:     return adc_reg_val;
   685     05DA  0873               	movf	read_adc@adc_reg_val+1,w
   686     05DB  00F1               	movwf	?_read_adc+1
   687     05DC  0872               	movf	read_adc@adc_reg_val,w
   688     05DD  00F0               	movwf	?_read_adc
   689     05DE                     l27:
   690     05DE  0008               	return
   691     05DF                     __end_of_read_adc:
   692                           
   693                           	psect	text2
   694     05B1                     __ptext2:	
   695 ;; *************** function _init_config *****************
   696 ;; Defined at:
   697 ;;		line 44 in file "main.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, status,2, status,0, pclath, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   711 ;;      Params:         0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0
   714 ;;      Totals:         0       0       0       0       0
   715 ;;Total ram usage:        0 bytes
   716 ;; Hardware stack levels used: 1
   717 ;; Hardware stack levels required when called: 3
   718 ;; This function calls:
   719 ;;		_init_adc
   720 ;;		_init_clcd
   721 ;; This function is called by:
   722 ;;		_main
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726     05B1                     _init_config:	
   727                           ;psect for function _init_config
   728                           
   729     05B1                     l993:	
   730                           ;incstack = 0
   731                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   732                           
   733                           
   734                           ;main.c: 46: 
   735     05B1  120A  118A  25A6  120A  118A  	fcall	_init_clcd
   736     05B6                     l995:
   737                           
   738                           ;main.c: 47:         display(adc_reg_val);
   739     05B6  120A  118A  259C  120A  118A  	fcall	_init_adc
   740     05BB                     l77:
   741     05BB  0008               	return
   742     05BC                     __end_of_init_config:
   743                           
   744                           	psect	text3
   745     05A6                     __ptext3:	
   746 ;; *************** function _init_clcd *****************
   747 ;; Defined at:
   748 ;;		line 50 in file "clcd.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, status,2, status,0, pclath, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   762 ;;      Params:         0       0       0       0       0
   763 ;;      Locals:         0       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0
   765 ;;      Totals:         0       0       0       0       0
   766 ;;Total ram usage:        0 bytes
   767 ;; Hardware stack levels used: 1
   768 ;; Hardware stack levels required when called: 2
   769 ;; This function calls:
   770 ;;		_init_display_controller
   771 ;; This function is called by:
   772 ;;		_init_config
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776     05A6                     _init_clcd:	
   777                           ;psect for function _init_clcd
   778                           
   779     05A6                     l887:	
   780                           ;incstack = 0
   781                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
   782                           
   783                           
   784                           ;clcd.c: 53:     TRISD = 0x00;
   785     05A6  1683               	bsf	3,5	;RP0=1, select bank1
   786     05A7  1303               	bcf	3,6	;RP1=0, select bank1
   787     05A8  0188               	clrf	8	;volatile
   788     05A9                     l889:
   789                           
   790                           ;clcd.c: 56:     TRISE2 = 0;
   791     05A9  1109               	bcf	9,2	;volatile
   792     05AA                     l891:
   793                           
   794                           ;clcd.c: 57:     TRISE1 = 0;
   795     05AA  1089               	bcf	9,1	;volatile
   796     05AB                     l893:
   797                           
   798                           ;clcd.c: 59:     init_display_controller();
   799     05AB  120A  118A  270F  120A  118A  	fcall	_init_display_controller
   800     05B0                     l50:
   801     05B0  0008               	return
   802     05B1                     __end_of_init_clcd:
   803                           
   804                           	psect	text4
   805     070F                     __ptext4:	
   806 ;; *************** function _init_display_controller *****************
   807 ;; Defined at:
   808 ;;		line 27 in file "clcd.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0, pclath, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   822 ;;      Params:         0       0       0       0       0
   823 ;;      Locals:         0       0       0       0       0
   824 ;;      Temps:          2       0       0       0       0
   825 ;;      Totals:         2       0       0       0       0
   826 ;;Total ram usage:        2 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; Hardware stack levels required when called: 1
   829 ;; This function calls:
   830 ;;		_clcd_write
   831 ;; This function is called by:
   832 ;;		_init_clcd
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836     070F                     _init_display_controller:	
   837                           ;psect for function _init_display_controller
   838                           
   839     070F                     l861:	
   840                           ;incstack = 0
   841                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
   842                           
   843                           
   844                           ;clcd.c: 30:     _delay((unsigned long)((30)*(20000000/4000.0)));
   845     070F  30C3               	movlw	195
   846     0710  00F5               	movwf	??_init_display_controller+1
   847     0711  30CD               	movlw	205
   848     0712  00F4               	movwf	??_init_display_controller
   849     0713                     u477:
   850     0713  0BF4               	decfsz	??_init_display_controller,f
   851     0714  2F13               	goto	u477
   852     0715  0BF5               	decfsz	??_init_display_controller+1,f
   853     0716  2F13               	goto	u477
   854     0717                     l863:
   855                           
   856                           ;clcd.c: 33:     clcd_write(0x33, 0);
   857     0717  01F0               	clrf	clcd_write@mode
   858     0718  3033               	movlw	51
   859     0719  120A  118A  265B  120A  118A  	fcall	_clcd_write
   860     071E                     l865:
   861                           
   862                           ;clcd.c: 34:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   863     071E  301B               	movlw	27
   864     071F  00F5               	movwf	??_init_display_controller+1
   865     0720  309E               	movlw	158
   866     0721  00F4               	movwf	??_init_display_controller
   867     0722                     u487:
   868     0722  0BF4               	decfsz	??_init_display_controller,f
   869     0723  2F22               	goto	u487
   870     0724  0BF5               	decfsz	??_init_display_controller+1,f
   871     0725  2F22               	goto	u487
   872     0726  0000               	nop
   873                           
   874                           ;clcd.c: 35:     clcd_write(0x33, 0);
   875     0727  01F0               	clrf	clcd_write@mode
   876     0728  3033               	movlw	51
   877     0729  120A  118A  265B  120A  118A  	fcall	_clcd_write
   878     072E                     l867:
   879                           
   880                           ;clcd.c: 36:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   881     072E  30A6               	movlw	166
   882     072F  00F4               	movwf	??_init_display_controller
   883     0730                     u497:
   884     0730  0BF4               	decfsz	??_init_display_controller,f
   885     0731  2F30               	goto	u497
   886     0732  0000               	nop
   887     0733                     l869:
   888                           
   889                           ;clcd.c: 37:     clcd_write(0x33, 0);
   890     0733  01F0               	clrf	clcd_write@mode
   891     0734  3033               	movlw	51
   892     0735  120A  118A  265B  120A  118A  	fcall	_clcd_write
   893     073A                     l871:
   894                           
   895                           ;clcd.c: 38:     _delay((unsigned long)((1)*(20000000/4000000.0)));
   896     073A  2F3B               	nop2	;2 cycle nop
   897     073B  2F3C               	nop2	;2 cycle nop
   898     073C  0000               	nop
   899     073D                     l873:
   900                           
   901                           ;clcd.c: 40:     clcd_write(0x02, 0);
   902     073D  01F0               	clrf	clcd_write@mode
   903     073E  3002               	movlw	2
   904     073F  120A  118A  265B  120A  118A  	fcall	_clcd_write
   905     0744                     l875:
   906                           
   907                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   908     0744  30A6               	movlw	166
   909     0745  00F4               	movwf	??_init_display_controller
   910     0746                     u507:
   911     0746  0BF4               	decfsz	??_init_display_controller,f
   912     0747  2F46               	goto	u507
   913     0748  0000               	nop
   914                           
   915                           ;clcd.c: 42:     clcd_write(0x28, 0);
   916     0749  01F0               	clrf	clcd_write@mode
   917     074A  3028               	movlw	40
   918     074B  120A  118A  265B  120A  118A  	fcall	_clcd_write
   919     0750                     l877:
   920                           
   921                           ;clcd.c: 43:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   922     0750  30A6               	movlw	166
   923     0751  00F4               	movwf	??_init_display_controller
   924     0752                     u517:
   925     0752  0BF4               	decfsz	??_init_display_controller,f
   926     0753  2F52               	goto	u517
   927     0754  0000               	nop
   928     0755                     l879:
   929                           
   930                           ;clcd.c: 44:     clcd_write(0x01, 0);
   931     0755  01F0               	clrf	clcd_write@mode
   932     0756  3001               	movlw	1
   933     0757  120A  118A  265B  120A  118A  	fcall	_clcd_write
   934                           
   935                           ;clcd.c: 45:     _delay((unsigned long)((500)*(20000000/4000000.0)));
   936     075C  3004               	movlw	4
   937     075D  00F5               	movwf	??_init_display_controller+1
   938     075E  303D               	movlw	61
   939     075F  00F4               	movwf	??_init_display_controller
   940     0760                     u527:
   941     0760  0BF4               	decfsz	??_init_display_controller,f
   942     0761  2F60               	goto	u527
   943     0762  0BF5               	decfsz	??_init_display_controller+1,f
   944     0763  2F60               	goto	u527
   945     0764  2F65               	nop2
   946     0765                     l881:
   947                           
   948                           ;clcd.c: 46:     clcd_write(0x0C, 0);
   949     0765  01F0               	clrf	clcd_write@mode
   950     0766  300C               	movlw	12
   951     0767  120A  118A  265B  120A  118A  	fcall	_clcd_write
   952     076C                     l883:
   953                           
   954                           ;clcd.c: 47:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   955     076C  30A6               	movlw	166
   956     076D  00F4               	movwf	??_init_display_controller
   957     076E                     u537:
   958     076E  0BF4               	decfsz	??_init_display_controller,f
   959     076F  2F6E               	goto	u537
   960     0770  0000               	nop
   961     0771                     l47:
   962     0771  0008               	return
   963     0772                     __end_of_init_display_controller:
   964                           
   965                           	psect	text5
   966     059C                     __ptext5:	
   967 ;; *************** function _init_adc *****************
   968 ;; Defined at:
   969 ;;		line 9 in file "adc.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		None
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   983 ;;      Params:         0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0
   986 ;;      Totals:         0       0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels used: 1
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_init_config
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996     059C                     _init_adc:	
   997                           ;psect for function _init_adc
   998                           
   999     059C                     l885:	
  1000                           ;incstack = 0
  1001                           ; Regs used in _init_adc: []
  1002                           
  1003                           
  1004                           ;adc.c: 12:     ADFM = 1;
  1005     059C  1683               	bsf	3,5	;RP0=1, select bank1
  1006     059D  1303               	bcf	3,6	;RP1=0, select bank1
  1007     059E  179F               	bsf	31,7	;volatile
  1008                           
  1009                           ;adc.c: 15:     ADON = 1;
  1010     059F  1283               	bcf	3,5	;RP0=0, select bank0
  1011     05A0  1303               	bcf	3,6	;RP1=0, select bank0
  1012     05A1  141F               	bsf	31,0	;volatile
  1013                           
  1014                           ;adc.c: 18:     CHS2 = 0;
  1015     05A2  129F               	bcf	31,5	;volatile
  1016                           
  1017                           ;adc.c: 19:     CHS1 = 1;
  1018     05A3  161F               	bsf	31,4	;volatile
  1019                           
  1020                           ;adc.c: 20:     CHS0 = 0;
  1021     05A4  119F               	bcf	31,3	;volatile
  1022     05A5                     l21:
  1023     05A5  0008               	return
  1024     05A6                     __end_of_init_adc:
  1025                           
  1026                           	psect	text6
  1027     0772                     __ptext6:	
  1028 ;; *************** function _display *****************
  1029 ;; Defined at:
  1030 ;;		line 13 in file "main.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  adc_reg_val     2    0[BANK0 ] unsigned short 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  buff            3    2[BANK0 ] unsigned char [3]
  1035 ;;  i               2    5[BANK0 ] int 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1045 ;;      Params:         0       2       0       0       0
  1046 ;;      Locals:         0       5       0       0       0
  1047 ;;      Temps:          0       0       0       0       0
  1048 ;;      Totals:         0       7       0       0       0
  1049 ;;Total ram usage:        7 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 2
  1052 ;; This function calls:
  1053 ;;		___lwdiv
  1054 ;;		___lwmod
  1055 ;;		___wmul
  1056 ;;		_clcd_print
  1057 ;;		_clcd_putch
  1058 ;; This function is called by:
  1059 ;;		_main
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063     0772                     _display:	
  1064                           ;psect for function _display
  1065                           
  1066     0772                     l973:	
  1067                           ;incstack = 0
  1068                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1069                           
  1070                           
  1071                           ;main.c: 13: ;main.c: 14:     i = 1;;main.c: 16:     {;main.c: 17:         buff[i] = (ad
      +                          c_reg_val % 10) + '0';;main.c: 20:     } while (i--);
  1072     0772  3064               	movlw	100
  1073     0773  00F6               	movwf	___lwdiv@divisor
  1074     0774  3000               	movlw	0
  1075     0775  00F7               	movwf	___lwdiv@divisor+1
  1076     0776  1283               	bcf	3,5	;RP0=0, select bank0
  1077     0777  1303               	bcf	3,6	;RP1=0, select bank0
  1078     0778  0821               	movf	display@adc_reg_val+1,w
  1079     0779  00F1               	movwf	___wmul@multiplier+1
  1080     077A  0820               	movf	display@adc_reg_val,w
  1081     077B  00F0               	movwf	___wmul@multiplier
  1082     077C  3031               	movlw	49
  1083     077D  00F2               	movwf	___wmul@multiplicand
  1084     077E  3000               	movlw	0
  1085     077F  00F3               	movwf	___wmul@multiplicand+1
  1086     0780  120A  118A  25DF  120A  118A  	fcall	___wmul
  1087     0785  0871               	movf	?___wmul+1,w
  1088     0786  00F9               	movwf	___lwdiv@dividend+1
  1089     0787  0870               	movf	?___wmul,w
  1090     0788  00F8               	movwf	___lwdiv@dividend
  1091     0789  120A  118A  26CB  120A  118A  	fcall	___lwdiv
  1092     078E  0877               	movf	?___lwdiv+1,w
  1093     078F  1283               	bcf	3,5	;RP0=0, select bank0
  1094     0790  1303               	bcf	3,6	;RP1=0, select bank0
  1095     0791  00A1               	movwf	display@adc_reg_val+1
  1096     0792  0876               	movf	?___lwdiv,w
  1097     0793  00A0               	movwf	display@adc_reg_val
  1098     0794                     l975:
  1099                           
  1100                           ;main.c: 23: 
  1101     0794  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1102     0795  00F4               	movwf	clcd_print@str
  1103     0796  3080               	movlw	128
  1104     0797  00F5               	movwf	clcd_print@str+1
  1105     0798  30C0               	movlw	192
  1106     0799  00F6               	movwf	clcd_print@addr
  1107     079A  120A  118A  262C  120A  118A  	fcall	_clcd_print
  1108     079F                     l977:
  1109                           
  1110                           ;main.c: 27:     clcd_putch((char)223, (0xC0 + 14));
  1111     079F  3001               	movlw	1
  1112     07A0  1283               	bcf	3,5	;RP0=0, select bank0
  1113     07A1  1303               	bcf	3,6	;RP1=0, select bank0
  1114     07A2  00A5               	movwf	display@i
  1115     07A3  3000               	movlw	0
  1116     07A4  00A6               	movwf	display@i+1
  1117     07A5                     l979:
  1118                           
  1119                           ;main.c: 29: };main.c: 30: 
  1120     07A5  0825               	movf	display@i,w
  1121     07A6  3E22               	addlw	(low (display@buff| 0))& (0+255)
  1122     07A7  0084               	movwf	4
  1123     07A8  300A               	movlw	10
  1124     07A9  00F0               	movwf	___lwmod@divisor
  1125     07AA  3000               	movlw	0
  1126     07AB  00F1               	movwf	___lwmod@divisor+1
  1127     07AC  0821               	movf	display@adc_reg_val+1,w
  1128     07AD  00F3               	movwf	___lwmod@dividend+1
  1129     07AE  0820               	movf	display@adc_reg_val,w
  1130     07AF  00F2               	movwf	___lwmod@dividend
  1131     07B0  120A  118A  2691  120A  118A  	fcall	___lwmod
  1132     07B5  0870               	movf	?___lwmod,w
  1133     07B6  3E30               	addlw	48
  1134     07B7  1383               	bcf	3,7	;select IRP bank0
  1135     07B8  0080               	movwf	0
  1136     07B9                     l981:
  1137                           
  1138                           ;main.c: 31: static void init_config(void) {
  1139     07B9  300A               	movlw	10
  1140     07BA  00F6               	movwf	___lwdiv@divisor
  1141     07BB  3000               	movlw	0
  1142     07BC  00F7               	movwf	___lwdiv@divisor+1
  1143     07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1144     07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1145     07BF  0821               	movf	display@adc_reg_val+1,w
  1146     07C0  00F9               	movwf	___lwdiv@dividend+1
  1147     07C1  0820               	movf	display@adc_reg_val,w
  1148     07C2  00F8               	movwf	___lwdiv@dividend
  1149     07C3  120A  118A  26CB  120A  118A  	fcall	___lwdiv
  1150     07C8  0877               	movf	?___lwdiv+1,w
  1151     07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1152     07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1153     07CB  00A1               	movwf	display@adc_reg_val+1
  1154     07CC  0876               	movf	?___lwdiv,w
  1155     07CD  00A0               	movwf	display@adc_reg_val
  1156     07CE                     l983:
  1157                           
  1158                           ;main.c: 33:     init_clcd();
  1159     07CE  30FF               	movlw	255
  1160     07CF  07A5               	addwf	display@i,f
  1161     07D0  1803               	skipnc
  1162     07D1  0AA6               	incf	display@i+1,f
  1163     07D2  30FF               	movlw	255
  1164     07D3  07A6               	addwf	display@i+1,f
  1165     07D4  0A25               	incf	display@i,w
  1166     07D5  1D03               	skipz
  1167     07D6  2FDB               	goto	u461
  1168     07D7  0A26               	incf	display@i+1,w
  1169     07D8  1D03               	btfss	3,2
  1170     07D9  2FDB               	goto	u461
  1171     07DA  2FDC               	goto	u460
  1172     07DB                     u461:
  1173     07DB  2FA5               	goto	l979
  1174     07DC                     u460:
  1175     07DC                     l985:
  1176                           
  1177                           ;main.c: 35: }
  1178     07DC  01A4               	clrf	display@buff+2
  1179     07DD                     l987:
  1180                           
  1181                           ;main.c: 38:     unsigned short adc_reg_val;
  1182     07DD  3022               	movlw	(low (display@buff| 0))& (0+255)
  1183     07DE  00F4               	movwf	clcd_print@str
  1184     07DF  3000               	movlw	0
  1185     07E0  00F5               	movwf	clcd_print@str+1
  1186     07E1  30CC               	movlw	204
  1187     07E2  00F6               	movwf	clcd_print@addr
  1188     07E3  120A  118A  262C  120A  118A  	fcall	_clcd_print
  1189     07E8                     l989:
  1190                           
  1191                           ;main.c: 40: 
  1192     07E8  30CE               	movlw	206
  1193     07E9  00F4               	movwf	clcd_putch@addr
  1194     07EA  30DF               	movlw	223
  1195     07EB  120A  118A  25BC  120A  118A  	fcall	_clcd_putch
  1196     07F0                     l991:
  1197                           
  1198                           ;main.c: 41:     clcd_print("LM35 TEMP SENSOR", (0x80 + 0));
  1199     07F0  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1200     07F1  00F4               	movwf	clcd_print@str
  1201     07F2  3080               	movlw	128
  1202     07F3  00F5               	movwf	clcd_print@str+1
  1203     07F4  30CF               	movlw	207
  1204     07F5  00F6               	movwf	clcd_print@addr
  1205     07F6  120A  118A  262C  120A  118A  	fcall	_clcd_print
  1206     07FB                     l74:
  1207     07FB  0008               	return
  1208     07FC                     __end_of_display:
  1209                           
  1210                           	psect	text7
  1211     05BC                     __ptext7:	
  1212 ;; *************** function _clcd_putch *****************
  1213 ;; Defined at:
  1214 ;;		line 62 in file "clcd.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  data            1    wreg     const unsigned char 
  1217 ;;  addr            1    4[COMMON] unsigned char 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  data            1    5[COMMON] const unsigned char 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0, pclath, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1229 ;;      Params:         1       0       0       0       0
  1230 ;;      Locals:         1       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0
  1232 ;;      Totals:         2       0       0       0       0
  1233 ;;Total ram usage:        2 bytes
  1234 ;; Hardware stack levels used: 1
  1235 ;; Hardware stack levels required when called: 1
  1236 ;; This function calls:
  1237 ;;		_clcd_write
  1238 ;; This function is called by:
  1239 ;;		_display
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243     05BC                     _clcd_putch:	
  1244                           ;psect for function _clcd_putch
  1245                           
  1246                           
  1247                           ;incstack = 0
  1248                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  1249                           ;clcd_putch@data stored from wreg
  1250     05BC  00F5               	movwf	clcd_putch@data
  1251     05BD                     l895:
  1252                           
  1253                           ;clcd.c: 62: void clcd_putch(const char data, unsigned char addr);clcd.c: 63: {;clcd.c: 
      +                          64:     clcd_write(addr, 0);
  1254     05BD  01F0               	clrf	clcd_write@mode
  1255     05BE  0874               	movf	clcd_putch@addr,w
  1256     05BF  120A  118A  265B  120A  118A  	fcall	_clcd_write
  1257                           
  1258                           ;clcd.c: 65:     clcd_write(data, 1);
  1259     05C4  01F0               	clrf	clcd_write@mode
  1260     05C5  0AF0               	incf	clcd_write@mode,f
  1261     05C6  0875               	movf	clcd_putch@data,w
  1262     05C7  120A  118A  265B  120A  118A  	fcall	_clcd_write
  1263     05CC                     l53:
  1264     05CC  0008               	return
  1265     05CD                     __end_of_clcd_putch:
  1266                           
  1267                           	psect	text8
  1268     062C                     __ptext8:	
  1269 ;; *************** function _clcd_print *****************
  1270 ;; Defined at:
  1271 ;;		line 68 in file "clcd.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  str             2    4[COMMON] PTR const unsigned char 
  1274 ;;		 -> STR_3(17), STR_2(2), display@buff(3), STR_1(13), 
  1275 ;;  addr            1    6[COMMON] unsigned char 
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      void 
  1280 ;; Registers used:
  1281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1287 ;;      Params:         3       0       0       0       0
  1288 ;;      Locals:         0       0       0       0       0
  1289 ;;      Temps:          0       0       0       0       0
  1290 ;;      Totals:         3       0       0       0       0
  1291 ;;Total ram usage:        3 bytes
  1292 ;; Hardware stack levels used: 1
  1293 ;; Hardware stack levels required when called: 1
  1294 ;; This function calls:
  1295 ;;		_clcd_write
  1296 ;; This function is called by:
  1297 ;;		_display
  1298 ;;		_main
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302     062C                     _clcd_print:	
  1303                           ;psect for function _clcd_print
  1304                           
  1305     062C                     l897:	
  1306                           ;incstack = 0
  1307                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1308                           
  1309                           
  1310                           ;clcd.c: 68: void clcd_print(const char *str, unsigned char addr);clcd.c: 69: {;clcd.c: 
      +                          70:     clcd_write(addr, 0);
  1311     062C  01F0               	clrf	clcd_write@mode
  1312     062D  0876               	movf	clcd_print@addr,w
  1313     062E  120A  118A  265B  120A  118A  	fcall	_clcd_write
  1314                           
  1315                           ;clcd.c: 72:     while (*str != '\0')
  1316     0633  2E4A               	goto	l903
  1317     0634                     l899:
  1318                           
  1319                           ;clcd.c: 73:     {;clcd.c: 74:         clcd_write(*str, 1);
  1320     0634  01F0               	clrf	clcd_write@mode
  1321     0635  0AF0               	incf	clcd_write@mode,f
  1322     0636  0875               	movf	clcd_print@str+1,w
  1323     0637  00FF               	movwf	btemp+1
  1324     0638  0874               	movf	clcd_print@str,w
  1325     0639  0084               	movwf	4
  1326     063A  120A  118A  2003  120A  118A  	fcall	stringtab
  1327     063F  120A  118A  265B  120A  118A  	fcall	_clcd_write
  1328     0644                     l901:
  1329                           
  1330                           ;clcd.c: 75:         str++;
  1331     0644  3001               	movlw	1
  1332     0645  07F4               	addwf	clcd_print@str,f
  1333     0646  1803               	skipnc
  1334     0647  0AF5               	incf	clcd_print@str+1,f
  1335     0648  3000               	movlw	0
  1336     0649  07F5               	addwf	clcd_print@str+1,f
  1337     064A                     l903:
  1338                           
  1339                           ;clcd.c: 72:     while (*str != '\0')
  1340     064A  0875               	movf	clcd_print@str+1,w
  1341     064B  1283               	bcf	3,5	;RP0=0, select bank0
  1342     064C  1303               	bcf	3,6	;RP1=0, select bank0
  1343     064D  00FF               	movwf	btemp+1
  1344     064E  0874               	movf	clcd_print@str,w
  1345     064F  0084               	movwf	4
  1346     0650  120A  118A  2003  120A  118A  	fcall	stringtab
  1347     0655  3A00               	xorlw	0
  1348     0656  1D03               	skipz
  1349     0657  2E59               	goto	u271
  1350     0658  2E5A               	goto	u270
  1351     0659                     u271:
  1352     0659  2E34               	goto	l899
  1353     065A                     u270:
  1354     065A                     l59:
  1355     065A  0008               	return
  1356     065B                     __end_of_clcd_print:
  1357                           
  1358                           	psect	text9
  1359     065B                     __ptext9:	
  1360 ;; *************** function _clcd_write *****************
  1361 ;; Defined at:
  1362 ;;		line 10 in file "clcd.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;  byte            1    wreg     unsigned char 
  1365 ;;  mode            1    0[COMMON] unsigned char 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  byte            1    3[COMMON] unsigned char 
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, status,2, status,0
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1377 ;;      Params:         1       0       0       0       0
  1378 ;;      Locals:         1       0       0       0       0
  1379 ;;      Temps:          2       0       0       0       0
  1380 ;;      Totals:         4       0       0       0       0
  1381 ;;Total ram usage:        4 bytes
  1382 ;; Hardware stack levels used: 1
  1383 ;; This function calls:
  1384 ;;		Nothing
  1385 ;; This function is called by:
  1386 ;;		_init_display_controller
  1387 ;;		_clcd_putch
  1388 ;;		_clcd_print
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392     065B                     _clcd_write:	
  1393                           ;psect for function _clcd_write
  1394                           
  1395                           
  1396                           ;incstack = 0
  1397                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  1398                           ;clcd_write@byte stored from wreg
  1399     065B  00F3               	movwf	clcd_write@byte
  1400     065C                     l841:
  1401                           
  1402                           ;clcd.c: 10: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 11: 
      +                          {;clcd.c: 12:     RE2 = mode;
  1403     065C  1870               	btfsc	clcd_write@mode,0
  1404     065D  2E5F               	goto	u241
  1405     065E  2E63               	goto	u240
  1406     065F                     u241:
  1407     065F  1283               	bcf	3,5	;RP0=0, select bank0
  1408     0660  1303               	bcf	3,6	;RP1=0, select bank0
  1409     0661  1509               	bsf	9,2	;volatile
  1410     0662  2E66               	goto	u254
  1411     0663                     u240:
  1412     0663  1283               	bcf	3,5	;RP0=0, select bank0
  1413     0664  1303               	bcf	3,6	;RP1=0, select bank0
  1414     0665  1109               	bcf	9,2	;volatile
  1415     0666                     u254:
  1416     0666                     l843:
  1417                           
  1418                           ;clcd.c: 14:     PORTD = byte & 0xF0;
  1419     0666  0873               	movf	clcd_write@byte,w
  1420     0667  39F0               	andlw	240
  1421     0668  0088               	movwf	8	;volatile
  1422     0669                     l845:
  1423                           
  1424                           ;clcd.c: 15:     RE1 = 1;
  1425     0669  1489               	bsf	9,1	;volatile
  1426     066A                     l847:
  1427                           
  1428                           ;clcd.c: 16:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1429     066A  30A6               	movlw	166
  1430     066B  00F1               	movwf	??_clcd_write
  1431     066C                     u547:
  1432     066C  0BF1               	decfsz	??_clcd_write,f
  1433     066D  2E6C               	goto	u547
  1434     066E  0000               	nop
  1435     066F                     l849:
  1436                           
  1437                           ;clcd.c: 17:     RE1 = 0;
  1438     066F  1283               	bcf	3,5	;RP0=0, select bank0
  1439     0670  1303               	bcf	3,6	;RP1=0, select bank0
  1440     0671  1089               	bcf	9,1	;volatile
  1441     0672                     l851:
  1442                           
  1443                           ;clcd.c: 19:     PORTD = (byte & 0x0F) << 4;
  1444     0672  0873               	movf	clcd_write@byte,w
  1445     0673  390F               	andlw	15
  1446     0674  00F1               	movwf	??_clcd_write
  1447     0675  3003               	movlw	3
  1448     0676                     u265:
  1449     0676  1003               	clrc
  1450     0677  0DF1               	rlf	??_clcd_write,f
  1451     0678  3EFF               	addlw	-1
  1452     0679  1D03               	skipz
  1453     067A  2E76               	goto	u265
  1454     067B  1003               	clrc
  1455     067C  0D71               	rlf	??_clcd_write,w
  1456     067D  0088               	movwf	8	;volatile
  1457     067E                     l853:
  1458                           
  1459                           ;clcd.c: 20:     RE1 = 1;
  1460     067E  1489               	bsf	9,1	;volatile
  1461     067F                     l855:
  1462                           
  1463                           ;clcd.c: 21:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1464     067F  30A6               	movlw	166
  1465     0680  00F1               	movwf	??_clcd_write
  1466     0681                     u557:
  1467     0681  0BF1               	decfsz	??_clcd_write,f
  1468     0682  2E81               	goto	u557
  1469     0683  0000               	nop
  1470     0684                     l857:
  1471                           
  1472                           ;clcd.c: 22:     RE1 = 0;
  1473     0684  1283               	bcf	3,5	;RP0=0, select bank0
  1474     0685  1303               	bcf	3,6	;RP1=0, select bank0
  1475     0686  1089               	bcf	9,1	;volatile
  1476     0687                     l859:
  1477                           
  1478                           ;clcd.c: 24:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1479     0687  301B               	movlw	27
  1480     0688  00F2               	movwf	??_clcd_write+1
  1481     0689  309E               	movlw	158
  1482     068A  00F1               	movwf	??_clcd_write
  1483     068B                     u567:
  1484     068B  0BF1               	decfsz	??_clcd_write,f
  1485     068C  2E8B               	goto	u567
  1486     068D  0BF2               	decfsz	??_clcd_write+1,f
  1487     068E  2E8B               	goto	u567
  1488     068F  0000               	nop
  1489     0690                     l44:
  1490     0690  0008               	return
  1491     0691                     __end_of_clcd_write:
  1492                           
  1493                           	psect	text10
  1494     05DF                     __ptext10:	
  1495 ;; *************** function ___wmul *****************
  1496 ;; Defined at:
  1497 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;  multiplier      2    0[COMMON] unsigned int 
  1500 ;;  multiplicand    2    2[COMMON] unsigned int 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  product         2    4[COMMON] unsigned int 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  2    0[COMMON] unsigned int 
  1505 ;; Registers used:
  1506 ;;		wreg, status,2, status,0
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1512 ;;      Params:         4       0       0       0       0
  1513 ;;      Locals:         2       0       0       0       0
  1514 ;;      Temps:          0       0       0       0       0
  1515 ;;      Totals:         6       0       0       0       0
  1516 ;;Total ram usage:        6 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_display
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525     05DF                     ___wmul:	
  1526                           ;psect for function ___wmul
  1527                           
  1528     05DF                     l905:	
  1529                           ;incstack = 0
  1530                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1531                           
  1532     05DF  01F4               	clrf	___wmul@product
  1533     05E0  01F5               	clrf	___wmul@product+1
  1534     05E1                     l907:
  1535     05E1  1C70               	btfss	___wmul@multiplier,0
  1536     05E2  2DE4               	goto	u281
  1537     05E3  2DE5               	goto	u280
  1538     05E4                     u281:
  1539     05E4  2DEB               	goto	l171
  1540     05E5                     u280:
  1541     05E5                     l909:
  1542     05E5  0872               	movf	___wmul@multiplicand,w
  1543     05E6  07F4               	addwf	___wmul@product,f
  1544     05E7  1803               	skipnc
  1545     05E8  0AF5               	incf	___wmul@product+1,f
  1546     05E9  0873               	movf	___wmul@multiplicand+1,w
  1547     05EA  07F5               	addwf	___wmul@product+1,f
  1548     05EB                     l171:
  1549     05EB  3001               	movlw	1
  1550     05EC                     u295:
  1551     05EC  1003               	clrc
  1552     05ED  0DF2               	rlf	___wmul@multiplicand,f
  1553     05EE  0DF3               	rlf	___wmul@multiplicand+1,f
  1554     05EF  3EFF               	addlw	-1
  1555     05F0  1D03               	skipz
  1556     05F1  2DEC               	goto	u295
  1557     05F2                     l911:
  1558     05F2  3001               	movlw	1
  1559     05F3                     u305:
  1560     05F3  1003               	clrc
  1561     05F4  0CF1               	rrf	___wmul@multiplier+1,f
  1562     05F5  0CF0               	rrf	___wmul@multiplier,f
  1563     05F6  3EFF               	addlw	-1
  1564     05F7  1D03               	skipz
  1565     05F8  2DF3               	goto	u305
  1566     05F9                     l913:
  1567     05F9  0870               	movf	___wmul@multiplier,w
  1568     05FA  0471               	iorwf	___wmul@multiplier+1,w
  1569     05FB  1D03               	btfss	3,2
  1570     05FC  2DFE               	goto	u311
  1571     05FD  2DFF               	goto	u310
  1572     05FE                     u311:
  1573     05FE  2DE1               	goto	l907
  1574     05FF                     u310:
  1575     05FF                     l915:
  1576     05FF  0875               	movf	___wmul@product+1,w
  1577     0600  00F1               	movwf	?___wmul+1
  1578     0601  0874               	movf	___wmul@product,w
  1579     0602  00F0               	movwf	?___wmul
  1580     0603                     l173:
  1581     0603  0008               	return
  1582     0604                     __end_of___wmul:
  1583                           
  1584                           	psect	text11
  1585     0691                     __ptext11:	
  1586 ;; *************** function ___lwmod *****************
  1587 ;; Defined at:
  1588 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;  divisor         2    0[COMMON] unsigned int 
  1591 ;;  dividend        2    2[COMMON] unsigned int 
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;  counter         1    5[COMMON] unsigned char 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  2    0[COMMON] unsigned int 
  1596 ;; Registers used:
  1597 ;;		wreg, status,2, status,0
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1603 ;;      Params:         4       0       0       0       0
  1604 ;;      Locals:         1       0       0       0       0
  1605 ;;      Temps:          1       0       0       0       0
  1606 ;;      Totals:         6       0       0       0       0
  1607 ;;Total ram usage:        6 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; This function calls:
  1610 ;;		Nothing
  1611 ;; This function is called by:
  1612 ;;		_display
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616     0691                     ___lwmod:	
  1617                           ;psect for function ___lwmod
  1618                           
  1619     0691                     l945:	
  1620                           ;incstack = 0
  1621                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1622                           
  1623     0691  0870               	movf	___lwmod@divisor,w
  1624     0692  0471               	iorwf	___lwmod@divisor+1,w
  1625     0693  1903               	btfsc	3,2
  1626     0694  2E96               	goto	u391
  1627     0695  2E97               	goto	u390
  1628     0696                     u391:
  1629     0696  2EC6               	goto	l963
  1630     0697                     u390:
  1631     0697                     l947:
  1632     0697  01F5               	clrf	___lwmod@counter
  1633     0698  0AF5               	incf	___lwmod@counter,f
  1634     0699  2EA5               	goto	l953
  1635     069A                     l949:
  1636     069A  3001               	movlw	1
  1637     069B                     u405:
  1638     069B  1003               	clrc
  1639     069C  0DF0               	rlf	___lwmod@divisor,f
  1640     069D  0DF1               	rlf	___lwmod@divisor+1,f
  1641     069E  3EFF               	addlw	-1
  1642     069F  1D03               	skipz
  1643     06A0  2E9B               	goto	u405
  1644     06A1                     l951:
  1645     06A1  3001               	movlw	1
  1646     06A2  00F4               	movwf	??___lwmod
  1647     06A3  0874               	movf	??___lwmod,w
  1648     06A4  07F5               	addwf	___lwmod@counter,f
  1649     06A5                     l953:
  1650     06A5  1FF1               	btfss	___lwmod@divisor+1,7
  1651     06A6  2EA8               	goto	u411
  1652     06A7  2EA9               	goto	u410
  1653     06A8                     u411:
  1654     06A8  2E9A               	goto	l949
  1655     06A9                     u410:
  1656     06A9                     l955:
  1657     06A9  0871               	movf	___lwmod@divisor+1,w
  1658     06AA  0273               	subwf	___lwmod@dividend+1,w
  1659     06AB  1D03               	skipz
  1660     06AC  2EAF               	goto	u425
  1661     06AD  0870               	movf	___lwmod@divisor,w
  1662     06AE  0272               	subwf	___lwmod@dividend,w
  1663     06AF                     u425:
  1664     06AF  1C03               	skipc
  1665     06B0  2EB2               	goto	u421
  1666     06B1  2EB3               	goto	u420
  1667     06B2                     u421:
  1668     06B2  2EB9               	goto	l959
  1669     06B3                     u420:
  1670     06B3                     l957:
  1671     06B3  0870               	movf	___lwmod@divisor,w
  1672     06B4  02F2               	subwf	___lwmod@dividend,f
  1673     06B5  0871               	movf	___lwmod@divisor+1,w
  1674     06B6  1C03               	skipc
  1675     06B7  03F3               	decf	___lwmod@dividend+1,f
  1676     06B8  02F3               	subwf	___lwmod@dividend+1,f
  1677     06B9                     l959:
  1678     06B9  3001               	movlw	1
  1679     06BA                     u435:
  1680     06BA  1003               	clrc
  1681     06BB  0CF1               	rrf	___lwmod@divisor+1,f
  1682     06BC  0CF0               	rrf	___lwmod@divisor,f
  1683     06BD  3EFF               	addlw	-1
  1684     06BE  1D03               	skipz
  1685     06BF  2EBA               	goto	u435
  1686     06C0                     l961:
  1687     06C0  3001               	movlw	1
  1688     06C1  02F5               	subwf	___lwmod@counter,f
  1689     06C2  1D03               	btfss	3,2
  1690     06C3  2EC5               	goto	u441
  1691     06C4  2EC6               	goto	u440
  1692     06C5                     u441:
  1693     06C5  2EA9               	goto	l955
  1694     06C6                     u440:
  1695     06C6                     l963:
  1696     06C6  0873               	movf	___lwmod@dividend+1,w
  1697     06C7  00F1               	movwf	?___lwmod+1
  1698     06C8  0872               	movf	___lwmod@dividend,w
  1699     06C9  00F0               	movwf	?___lwmod
  1700     06CA                     l453:
  1701     06CA  0008               	return
  1702     06CB                     __end_of___lwmod:
  1703                           
  1704                           	psect	text12
  1705     06CB                     __ptext12:	
  1706 ;; *************** function ___lwdiv *****************
  1707 ;; Defined at:
  1708 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  divisor         2    6[COMMON] unsigned int 
  1711 ;;  dividend        2    8[COMMON] unsigned int 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  quotient        2   11[COMMON] unsigned int 
  1714 ;;  counter         1   13[COMMON] unsigned char 
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  2    6[COMMON] unsigned int 
  1717 ;; Registers used:
  1718 ;;		wreg, status,2, status,0
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1724 ;;      Params:         4       0       0       0       0
  1725 ;;      Locals:         3       0       0       0       0
  1726 ;;      Temps:          1       0       0       0       0
  1727 ;;      Totals:         8       0       0       0       0
  1728 ;;Total ram usage:        8 bytes
  1729 ;; Hardware stack levels used: 1
  1730 ;; This function calls:
  1731 ;;		Nothing
  1732 ;; This function is called by:
  1733 ;;		_display
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737     06CB                     ___lwdiv:	
  1738                           ;psect for function ___lwdiv
  1739                           
  1740     06CB                     l919:	
  1741                           ;incstack = 0
  1742                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1743                           
  1744     06CB  01FB               	clrf	___lwdiv@quotient
  1745     06CC  01FC               	clrf	___lwdiv@quotient+1
  1746     06CD                     l921:
  1747     06CD  0876               	movf	___lwdiv@divisor,w
  1748     06CE  0477               	iorwf	___lwdiv@divisor+1,w
  1749     06CF  1903               	btfsc	3,2
  1750     06D0  2ED2               	goto	u321
  1751     06D1  2ED3               	goto	u320
  1752     06D2                     u321:
  1753     06D2  2F0A               	goto	l941
  1754     06D3                     u320:
  1755     06D3                     l923:
  1756     06D3  01FD               	clrf	___lwdiv@counter
  1757     06D4  0AFD               	incf	___lwdiv@counter,f
  1758     06D5  2EE1               	goto	l929
  1759     06D6                     l925:
  1760     06D6  3001               	movlw	1
  1761     06D7                     u335:
  1762     06D7  1003               	clrc
  1763     06D8  0DF6               	rlf	___lwdiv@divisor,f
  1764     06D9  0DF7               	rlf	___lwdiv@divisor+1,f
  1765     06DA  3EFF               	addlw	-1
  1766     06DB  1D03               	skipz
  1767     06DC  2ED7               	goto	u335
  1768     06DD                     l927:
  1769     06DD  3001               	movlw	1
  1770     06DE  00FA               	movwf	??___lwdiv
  1771     06DF  087A               	movf	??___lwdiv,w
  1772     06E0  07FD               	addwf	___lwdiv@counter,f
  1773     06E1                     l929:
  1774     06E1  1FF7               	btfss	___lwdiv@divisor+1,7
  1775     06E2  2EE4               	goto	u341
  1776     06E3  2EE5               	goto	u340
  1777     06E4                     u341:
  1778     06E4  2ED6               	goto	l925
  1779     06E5                     u340:
  1780     06E5                     l931:
  1781     06E5  3001               	movlw	1
  1782     06E6                     u355:
  1783     06E6  1003               	clrc
  1784     06E7  0DFB               	rlf	___lwdiv@quotient,f
  1785     06E8  0DFC               	rlf	___lwdiv@quotient+1,f
  1786     06E9  3EFF               	addlw	-1
  1787     06EA  1D03               	skipz
  1788     06EB  2EE6               	goto	u355
  1789     06EC  0877               	movf	___lwdiv@divisor+1,w
  1790     06ED  0279               	subwf	___lwdiv@dividend+1,w
  1791     06EE  1D03               	skipz
  1792     06EF  2EF2               	goto	u365
  1793     06F0  0876               	movf	___lwdiv@divisor,w
  1794     06F1  0278               	subwf	___lwdiv@dividend,w
  1795     06F2                     u365:
  1796     06F2  1C03               	skipc
  1797     06F3  2EF5               	goto	u361
  1798     06F4  2EF6               	goto	u360
  1799     06F5                     u361:
  1800     06F5  2EFD               	goto	l937
  1801     06F6                     u360:
  1802     06F6                     l933:
  1803     06F6  0876               	movf	___lwdiv@divisor,w
  1804     06F7  02F8               	subwf	___lwdiv@dividend,f
  1805     06F8  0877               	movf	___lwdiv@divisor+1,w
  1806     06F9  1C03               	skipc
  1807     06FA  03F9               	decf	___lwdiv@dividend+1,f
  1808     06FB  02F9               	subwf	___lwdiv@dividend+1,f
  1809     06FC                     l935:
  1810     06FC  147B               	bsf	___lwdiv@quotient,0
  1811     06FD                     l937:
  1812     06FD  3001               	movlw	1
  1813     06FE                     u375:
  1814     06FE  1003               	clrc
  1815     06FF  0CF7               	rrf	___lwdiv@divisor+1,f
  1816     0700  0CF6               	rrf	___lwdiv@divisor,f
  1817     0701  3EFF               	addlw	-1
  1818     0702  1D03               	skipz
  1819     0703  2EFE               	goto	u375
  1820     0704                     l939:
  1821     0704  3001               	movlw	1
  1822     0705  02FD               	subwf	___lwdiv@counter,f
  1823     0706  1D03               	btfss	3,2
  1824     0707  2F09               	goto	u381
  1825     0708  2F0A               	goto	u380
  1826     0709                     u381:
  1827     0709  2EE5               	goto	l931
  1828     070A                     u380:
  1829     070A                     l941:
  1830     070A  087C               	movf	___lwdiv@quotient+1,w
  1831     070B  00F7               	movwf	?___lwdiv+1
  1832     070C  087B               	movf	___lwdiv@quotient,w
  1833     070D  00F6               	movwf	?___lwdiv
  1834     070E                     l443:
  1835     070E  0008               	return
  1836     070F                     __end_of___lwdiv:
  1837     007E                     btemp	set	126	;btemp
  1838     007E                     wtemp0	set	126
  1839                           
  1840                           	psect	config
  1841                           
  1842                           ;Config register CONFIG @ 0x2007
  1843                           ;	Oscillator Selection bits
  1844                           ;	FOSC = 0x3, unprogrammed default
  1845                           ;	Watchdog Timer Enable bit
  1846                           ;	WDTE = OFF, WDT disabled
  1847                           ;	Power-up Timer Enable bit
  1848                           ;	PWRTE = 0x1, unprogrammed default
  1849                           ;	Brown-out Reset Enable bit
  1850                           ;	BOREN = 0x1, unprogrammed default
  1851                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1852                           ;	LVP = 0x1, unprogrammed default
  1853                           ;	Data EEPROM Memory Code Protection bit
  1854                           ;	CPD = 0x1, unprogrammed default
  1855                           ;	Flash Program Memory Write Enable bits
  1856                           ;	WRT = 0x3, unprogrammed default
  1857                           ;	In-Circuit Debugger Mode bit
  1858                           ;	DEBUG = 0x1, unprogrammed default
  1859                           ;	Flash Program Memory Code Protection bit
  1860                           ;	CP = 0x1, unprogrammed default
  1861     2007                     	org	8199
  1862     2007  3FFB               	dw	16379

Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), STR_2(CODE[2]), display@buff(BANK0[3]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _display->___lwdiv
    _clcd_putch->_clcd_write
    _clcd_print->_clcd_write
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_display

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6406
                                              7 BANK0      2     2      0
                         _clcd_print
                            _display
                        _init_config
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     902
                           _init_adc
                          _init_clcd
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     902
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     902
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              7     5      2    3881
                                              0 BANK0      7     5      2
                            ___lwdiv
                            ___lwmod
                             ___wmul
                         _clcd_print
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    1022
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    1577
                                              4 COMMON     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     902
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _display
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
     ___wmul
     _clcd_print
     _clcd_putch
       _clcd_write
   _init_config
     _init_adc
     _init_clcd
       _init_display_controller
         _clcd_write
   _read_adc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9       9       5       11.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Sep 25 20:58:42 2022

                              pc 0002                   clcd_print@addr 0076                               l21 05A5  
                             l24 05D0                               l50 05B0                               l27 05DE  
                             l44 0690                               l53 05CC                               l47 0771  
                             l74 07FB                               l59 065A                               l77 05BB  
                             _GO 00FA                               fsr 0004              ___wmul@multiplicand 0072  
                            l171 05EB                              l173 0603                              l443 070E  
                            l453 06CA                              l901 0644                              l911 05F2  
                            l903 064A                              l921 06CD                              l913 05F9  
                            l905 05DF                              l841 065C                              l931 06E5  
                            l923 06D3                              l915 05FF                              l907 05E1  
                            l851 0672                              l843 0666                              l933 06F6  
                            l925 06D6                              l941 070A                              l909 05E5  
                            l853 067E                              l845 0669                              l861 070F  
                            l935 06FC                              l927 06DD                              l919 06CB  
                            l951 06A1                              l855 067F                              l847 066A  
                            l871 073A                              l863 0717                              l937 06FD  
                            l929 06E1                              l961 06C0                              l953 06A5  
                            l945 0691                              l857 0684                              l849 066F  
                            l881 0765                              l873 073D                              l865 071E  
                            l939 0704                              l955 06A9                              l947 0697  
                            l963 06C6                              l859 0687                              l883 076C  
                            l875 0744                              l867 072E                              l891 05AA  
                            l957 06B3                              l949 069A                              l981 07B9  
                            l973 0772                              l885 059C                              l877 0750  
                            l869 0733                              l893 05AB                              l959 06B9  
                            l895 05BD                              l991 07F0                              l983 07CE  
                            l975 0794                              l879 0755                              l887 05A6  
                            l967 05CD                              l897 062C                              l985 07DC  
                            l977 079F                              l889 05A9                              l993 05B1  
                            l969 05D4                              l899 0634                              l987 07DD  
                            l979 07A5                              l995 05B6                              l989 07E8  
                            l997 0604                              l999 0609                              _RE1 0049  
                            _RE2 004A                              u310 05FF                              u311 05FE  
                            u320 06D3                              u240 0663                              u321 06D2  
                            u305 05F3                              u241 065F                              u410 06A9  
                            u411 06A8                              u340 06E5                              u420 06B3  
                            u341 06E4                              u421 06B2                              u405 069B  
                            u254 0666                              u270 065A                              u335 06D7  
                            u271 0659                              u360 06F6                              u440 06C6  
                            u280 05E5                              u361 06F5                              u441 06C5  
                            u425 06AF                              u281 05E4                              u265 0676  
                            u450 05D4                              u355 06E6                              u435 06BA  
                            u507 0746                              u451 05D3                              u380 070A  
                            u460 07DC                              u381 0709                              u365 06F2  
                            u461 07DB                              u517 0752                              u390 0697  
                            u375 06FE                              u391 0696                              u295 05EC  
                            u527 0760                              u537 076E                              u547 066C  
                            u557 0681                              u477 0713                              u567 068B  
                            u487 0722                              u497 0730                   clcd_putch@addr 0074  
                            fsr0 0004                   clcd_putch@data 0075                              indf 0000  
                           l1001 0614                             l1003 061F                             _ADFM 04FF  
                           _ADON 00F8                             _CHS0 00FB                             _CHS1 00FC  
                           _CHS2 00FD                             STR_1 0024                             STR_2 0031  
                           STR_3 0013                      display@buff 0022                             _main 0604  
                           btemp 007E                             start 0000                   clcd_write@byte 0073  
                 clcd_write@mode 0070                            ?_main 0070                  __end_of___lwdiv 070F  
                __end_of___lwmod 06CB                     ?_init_config 0070                            _PORTD 0008  
                          _TRISD 0088                            _nDONE 00FA                  __end_of_display 07FC  
                          pclath 000A                            status 0003                            wtemp0 007E  
                __initialization 07FC                     __end_of_main 062C                           ??_main 007E  
                         _ADRESH 001E                           _ADRESL 009E                           _TRISE1 0449  
                         _TRISE2 044A               display@adc_reg_val 0020          _init_display_controller 070F  
                         ___wmul 05DF                        ??___lwdiv 007A                        ??___lwmod 0074  
               __end_of_init_adc 05A6                 __end_of_read_adc 05DF                        ??_display 007E  
        __end_of__initialization 07FC                   __pcstackCOMMON 0070        ??_init_display_controller 0074  
                     _clcd_print 062C                       _clcd_putch 05BC                       _clcd_write 065B  
                     __pmaintext 0604                          ?___wmul 0070                       __stringtab 0003  
                      ?_init_adc 0070                        ?_read_adc 0070                          ___lwdiv 06CB  
                        ___lwmod 0691                          __ptext1 05CD                          __ptext2 05B1  
                        __ptext3 05A6                          __ptext4 070F                          __ptext5 059C  
                        __ptext6 0772                          __ptext7 05BC                          __ptext8 062C  
                        __ptext9 065B                          _display 0772  __end_of_init_display_controller 0772  
              __end_of_init_clcd 05B1             end_of_initialization 07FC                       ??_init_adc 0070  
                     ??_read_adc 0072                      ?_clcd_print 0074                      ?_clcd_putch 0074  
                    ?_clcd_write 0070                  main@adc_reg_val 0027                    clcd_print@str 0074  
                 __end_of___wmul 0604              start_initialization 07FC                         ??___wmul 0074  
                  ??_init_config 0076                        ___latbits 0002                    __pcstackBANK0 0020  
               ___lwdiv@dividend 0078                         ?___lwdiv 0076                         ?___lwmod 0070  
                      __pstrings 0003                         ?_display 0020              read_adc@adc_reg_val 0072  
               ___lwdiv@quotient 007B                        _init_clcd 05A6              __end_of_init_config 05BC  
       ?_init_display_controller 0070                   ___wmul@product 0074                     ??_clcd_print 0077  
                   ??_clcd_putch 0075                     ??_clcd_write 0071                      __stringbase 0012  
              ___wmul@multiplier 0070               __end_of_clcd_print 065B               __end_of_clcd_putch 05CD  
             __end_of_clcd_write 0691                       ?_init_clcd 0070               __end_of__stringtab 0013  
                    _init_config 05B1                  ___lwdiv@divisor 0076                  ___lwdiv@counter 007D  
                       __ptext10 05DF                         __ptext11 0691                         __ptext12 06CB  
                       _init_adc 059C                         _read_adc 05CD                         display@i 0025  
                    ??_init_clcd 0076                 ___lwmod@dividend 0072                        stringcode 000D  
                ___lwmod@divisor 0070                  ___lwmod@counter 0075                         stringdir 000D  
                       stringtab 0003  

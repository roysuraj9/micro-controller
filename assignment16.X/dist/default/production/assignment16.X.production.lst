

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Oct 19 16:29:29 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     000E                     	;# 
    80     000E                     	;# 
    81     000F                     	;# 
    82     0010                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     001D                     	;# 
    98     001E                     	;# 
    99     001F                     	;# 
   100     0081                     	;# 
   101     0085                     	;# 
   102     0086                     	;# 
   103     0087                     	;# 
   104     0088                     	;# 
   105     0089                     	;# 
   106     008C                     	;# 
   107     008D                     	;# 
   108     008E                     	;# 
   109     0091                     	;# 
   110     0092                     	;# 
   111     0093                     	;# 
   112     0094                     	;# 
   113     0098                     	;# 
   114     0099                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     010C                     	;# 
   120     010D                     	;# 
   121     010E                     	;# 
   122     010F                     	;# 
   123     018C                     	;# 
   124     018D                     	;# 
   125     0000                     	;# 
   126     0001                     	;# 
   127     0002                     	;# 
   128     0003                     	;# 
   129     0004                     	;# 
   130     0005                     	;# 
   131     0006                     	;# 
   132     0007                     	;# 
   133     0008                     	;# 
   134     0009                     	;# 
   135     000A                     	;# 
   136     000B                     	;# 
   137     000C                     	;# 
   138     000D                     	;# 
   139     000E                     	;# 
   140     000E                     	;# 
   141     000F                     	;# 
   142     0010                     	;# 
   143     0011                     	;# 
   144     0012                     	;# 
   145     0013                     	;# 
   146     0014                     	;# 
   147     0015                     	;# 
   148     0015                     	;# 
   149     0016                     	;# 
   150     0017                     	;# 
   151     0018                     	;# 
   152     0019                     	;# 
   153     001A                     	;# 
   154     001B                     	;# 
   155     001B                     	;# 
   156     001C                     	;# 
   157     001D                     	;# 
   158     001E                     	;# 
   159     001F                     	;# 
   160     0081                     	;# 
   161     0085                     	;# 
   162     0086                     	;# 
   163     0087                     	;# 
   164     0088                     	;# 
   165     0089                     	;# 
   166     008C                     	;# 
   167     008D                     	;# 
   168     008E                     	;# 
   169     0091                     	;# 
   170     0092                     	;# 
   171     0093                     	;# 
   172     0094                     	;# 
   173     0098                     	;# 
   174     0099                     	;# 
   175     009C                     	;# 
   176     009D                     	;# 
   177     009E                     	;# 
   178     009F                     	;# 
   179     010C                     	;# 
   180     010D                     	;# 
   181     010E                     	;# 
   182     010F                     	;# 
   183     018C                     	;# 
   184     018D                     	;# 
   185     0000                     	;# 
   186     0001                     	;# 
   187     0002                     	;# 
   188     0003                     	;# 
   189     0004                     	;# 
   190     0005                     	;# 
   191     0006                     	;# 
   192     0007                     	;# 
   193     0008                     	;# 
   194     0009                     	;# 
   195     000A                     	;# 
   196     000B                     	;# 
   197     000C                     	;# 
   198     000D                     	;# 
   199     000E                     	;# 
   200     000E                     	;# 
   201     000F                     	;# 
   202     0010                     	;# 
   203     0011                     	;# 
   204     0012                     	;# 
   205     0013                     	;# 
   206     0014                     	;# 
   207     0015                     	;# 
   208     0015                     	;# 
   209     0016                     	;# 
   210     0017                     	;# 
   211     0018                     	;# 
   212     0019                     	;# 
   213     001A                     	;# 
   214     001B                     	;# 
   215     001B                     	;# 
   216     001C                     	;# 
   217     001D                     	;# 
   218     001E                     	;# 
   219     001F                     	;# 
   220     0081                     	;# 
   221     0085                     	;# 
   222     0086                     	;# 
   223     0087                     	;# 
   224     0088                     	;# 
   225     0089                     	;# 
   226     008C                     	;# 
   227     008D                     	;# 
   228     008E                     	;# 
   229     0091                     	;# 
   230     0092                     	;# 
   231     0093                     	;# 
   232     0094                     	;# 
   233     0098                     	;# 
   234     0099                     	;# 
   235     009C                     	;# 
   236     009D                     	;# 
   237     009E                     	;# 
   238     009F                     	;# 
   239     010C                     	;# 
   240     010D                     	;# 
   241     010E                     	;# 
   242     010F                     	;# 
   243     018C                     	;# 
   244     018D                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     0008                     	;# 
   254     0009                     	;# 
   255     000A                     	;# 
   256     000B                     	;# 
   257     000C                     	;# 
   258     000D                     	;# 
   259     000E                     	;# 
   260     000E                     	;# 
   261     000F                     	;# 
   262     0010                     	;# 
   263     0011                     	;# 
   264     0012                     	;# 
   265     0013                     	;# 
   266     0014                     	;# 
   267     0015                     	;# 
   268     0015                     	;# 
   269     0016                     	;# 
   270     0017                     	;# 
   271     0018                     	;# 
   272     0019                     	;# 
   273     001A                     	;# 
   274     001B                     	;# 
   275     001B                     	;# 
   276     001C                     	;# 
   277     001D                     	;# 
   278     001E                     	;# 
   279     001F                     	;# 
   280     0081                     	;# 
   281     0085                     	;# 
   282     0086                     	;# 
   283     0087                     	;# 
   284     0088                     	;# 
   285     0089                     	;# 
   286     008C                     	;# 
   287     008D                     	;# 
   288     008E                     	;# 
   289     0091                     	;# 
   290     0092                     	;# 
   291     0093                     	;# 
   292     0094                     	;# 
   293     0098                     	;# 
   294     0099                     	;# 
   295     009C                     	;# 
   296     009D                     	;# 
   297     009E                     	;# 
   298     009F                     	;# 
   299     010C                     	;# 
   300     010D                     	;# 
   301     010E                     	;# 
   302     010F                     	;# 
   303     018C                     	;# 
   304     018D                     	;# 
   305     0019                     _TXREG	set	25
   306     001A                     _RCREG	set	26
   307     0008                     _PORTD	set	8
   308     005F                     _GIE	set	95
   309     005E                     _PEIE	set	94
   310     0064                     _TXIF	set	100
   311     0065                     _RCIF	set	101
   312     00C4                     _CREN	set	196
   313     00C7                     _SPEN	set	199
   314     0049                     _RE1	set	73
   315     004A                     _RE2	set	74
   316     0099                     _SPBRG	set	153
   317     0088                     _TRISD	set	136
   318     0449                     _TRISE1	set	1097
   319     044A                     _TRISE2	set	1098
   320                           
   321                           	psect	strings
   322     0003                     __pstrings:
   323     0003                     stringtab:
   324     0003                     __stringtab:
   325                           
   326                           ;	String table - string pointers are 1 byte each
   327     0003  1BFF               	btfsc	btemp+1,7
   328     0004  280D               	ljmp	stringcode
   329     0005  1383               	bcf	3,7
   330     0006  187F               	btfsc	btemp+1,0
   331     0007  1783               	bsf	3,7
   332     0008  0800               	movf	0,w
   333     0009  0A84               	incf	4,f
   334     000A  1903               	skipnz
   335     000B  0AFF               	incf	btemp+1,f
   336     000C  0008               	return
   337     000D                     stringcode:
   338     000D                     stringdir:
   339     000D  3000               	movlw	high stringdir
   340     000E  008A               	movwf	10
   341     000F  0804               	movf	4,w
   342     0010  0A84               	incf	4,f
   343     0011  0782               	addwf	2,f
   344     0012                     __stringbase:
   345     0012  3400               	retlw	0
   346     0013                     __end_of__stringtab:
   347     0013                     STR_1:
   348     0013  3455               	retlw	85	;'U'
   349     0014  3441               	retlw	65	;'A'
   350     0015  3452               	retlw	82	;'R'
   351     0016  3454               	retlw	84	;'T'
   352     0017  3420               	retlw	32	;' '
   353     0018  3454               	retlw	84	;'T'
   354     0019  3465               	retlw	101	;'e'
   355     001A  3473               	retlw	115	;'s'
   356     001B  3474               	retlw	116	;'t'
   357     001C  3420               	retlw	32	;' '
   358     001D  3443               	retlw	67	;'C'
   359     001E  346F               	retlw	111	;'o'
   360     001F  3464               	retlw	100	;'d'
   361     0020  3465               	retlw	101	;'e'
   362     0021  340A               	retlw	10
   363     0022  340D               	retlw	13
   364     0023  3400               	retlw	0
   365     0023                     
   366                           	psect	cinit
   367     07E2                     start_initialization:	
   368                           ; #config settings
   369                           
   370     07E2                     __initialization:
   371                           
   372                           ; Clear objects allocated to BANK0
   373     07E2  1383               	bcf	3,7	;select IRP bank0
   374     07E3  304F               	movlw	low __pbssBANK0
   375     07E4  0084               	movwf	4
   376     07E5  3060               	movlw	low (__pbssBANK0+17)
   377     07E6  120A  118A  2466  120A  118A  	fcall	clear_ram0
   378                           
   379                           ; Clear objects allocated to BANK1
   380     07EB  30A0               	movlw	low __pbssBANK1
   381     07EC  0084               	movwf	4
   382     07ED  30B1               	movlw	low (__pbssBANK1+17)
   383     07EE  120A  118A  2466  120A  118A  	fcall	clear_ram0
   384                           
   385                           ; Clear objects allocated to BANK2
   386     07F3  1783               	bsf	3,7	;select IRP bank2
   387     07F4  3010               	movlw	low __pbssBANK2
   388     07F5  0084               	movwf	4
   389     07F6  306A               	movlw	low (__pbssBANK2+90)
   390     07F7  120A  118A  2466  120A  118A  	fcall	clear_ram0
   391     07FC                     end_of_initialization:	
   392                           ;End of C runtime variable initialization code
   393                           
   394     07FC                     __end_of__initialization:
   395     07FC  0183               	clrf	3
   396     07FD  120A  118A  2ECB   	ljmp	_main	;jump to C main() function
   397                           
   398                           	psect	bssBANK0
   399     004F                     __pbssBANK0:
   400     004F                     main@F958:
   401     004F                     	ds	17
   402                           
   403                           	psect	bssBANK1
   404     00A0                     __pbssBANK1:
   405     00A0                     main@F960:
   406     00A0                     	ds	17
   407                           
   408                           	psect	bssBANK2
   409     0110                     __pbssBANK2:
   410     0110                     main@F956:
   411     0110                     	ds	90
   412                           
   413                           	psect	clrtext
   414     0466                     clear_ram0:	
   415                           ;	Called with FSR containing the base address, and
   416                           ;	W with the last address+1
   417                           
   418     0466  0064               	clrwdt	;clear the watchdog before getting into this loop
   419     0467                     clrloop0:
   420     0467  0180               	clrf	0	;clear RAM location pointed to by FSR
   421     0468  0A84               	incf	4,f	;increment pointer
   422     0469  0604               	xorwf	4,w	;XOR with final address
   423     046A  1903               	btfsc	3,2	;have we reached the end yet?
   424     046B  3400               	retlw	0	;all done for this memory range, return
   425     046C  0604               	xorwf	4,w	;XOR again to restore value
   426     046D  2C67               	goto	clrloop0	;do the next byte
   427                           
   428                           	psect	cstackBANK3
   429     0190                     __pcstackBANK3:
   430     0190                     main@str:
   431                           
   432                           ; 90 bytes @ 0x0
   433     0190                     	ds	90
   434                           
   435                           	psect	cstackCOMMON
   436     0070                     __pcstackCOMMON:
   437     0070                     ?_clcd_write:
   438     0070                     ?_init_display_controller:	
   439                           ; 1 bytes @ 0x0
   440                           
   441     0070                     ?_init_clcd:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0070                     ?_clear_screen:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0070                     ?_getchar:	
   448                           ; 1 bytes @ 0x0
   449                           
   450     0070                     ??_getchar:	
   451                           ; 1 bytes @ 0x0
   452                           
   453     0070                     ?_putchar:	
   454                           ; 1 bytes @ 0x0
   455                           
   456     0070                     ??_putchar:	
   457                           ; 1 bytes @ 0x0
   458                           
   459     0070                     ?_puts:	
   460                           ; 1 bytes @ 0x0
   461                           
   462     0070                     ?_getstr:	
   463                           ; 1 bytes @ 0x0
   464                           
   465     0070                     ??_getstr:	
   466                           ; 1 bytes @ 0x0
   467                           
   468     0070                     ?_init_config:	
   469                           ; 1 bytes @ 0x0
   470                           
   471     0070                     ?_main:	
   472                           ; 1 bytes @ 0x0
   473                           
   474     0070                     ?_strlen:	
   475                           ; 1 bytes @ 0x0
   476                           
   477     0070                     ?___lldiv:	
   478                           ; 2 bytes @ 0x0
   479                           
   480     0070                     clcd_write@mode:	
   481                           ; 4 bytes @ 0x0
   482                           
   483     0070                     putchar@data:	
   484                           ; 1 bytes @ 0x0
   485                           
   486     0070                     strlen@s:	
   487                           ; 1 bytes @ 0x0
   488                           
   489     0070                     ___lldiv@divisor:	
   490                           ; 2 bytes @ 0x0
   491                           
   492                           
   493                           ; 4 bytes @ 0x0
   494     0070                     	ds	1
   495     0071                     ??_clcd_write:
   496     0071                     ??_puts:	
   497                           ; 1 bytes @ 0x1
   498                           
   499     0071                     getstr@j:	
   500                           ; 1 bytes @ 0x1
   501                           
   502                           
   503                           ; 1 bytes @ 0x1
   504     0071                     	ds	1
   505     0072                     ??_strlen:
   506     0072                     puts@s:	
   507                           ; 1 bytes @ 0x2
   508                           
   509     0072                     getstr@str:	
   510                           ; 1 bytes @ 0x2
   511                           
   512     0072                     strlen@cp:	
   513                           ; 1 bytes @ 0x2
   514                           
   515                           
   516                           ; 2 bytes @ 0x2
   517     0072                     	ds	1
   518     0073                     clcd_write@byte:
   519     0073                     getstr@i:	
   520                           ; 1 bytes @ 0x3
   521                           
   522                           
   523                           ; 1 bytes @ 0x3
   524     0073                     	ds	1
   525     0074                     ??_init_display_controller:
   526     0074                     ?_clcd_print:	
   527                           ; 1 bytes @ 0x4
   528                           
   529     0074                     ??_clear_screen:	
   530                           ; 1 bytes @ 0x4
   531                           
   532     0074                     ?_strncpy:	
   533                           ; 1 bytes @ 0x4
   534                           
   535     0074                     clcd_print@addr:	
   536                           ; 2 bytes @ 0x4
   537                           
   538     0074                     strncpy@to:	
   539                           ; 1 bytes @ 0x4
   540                           
   541     0074                     ___lldiv@dividend:	
   542                           ; 2 bytes @ 0x4
   543                           
   544                           
   545                           ; 4 bytes @ 0x4
   546     0074                     	ds	1
   547     0075                     ??_clcd_print:
   548                           
   549                           ; 1 bytes @ 0x5
   550     0075                     	ds	1
   551     0076                     ??_init_clcd:
   552     0076                     clcd_print@str:	
   553                           ; 1 bytes @ 0x6
   554                           
   555     0076                     strncpy@from:	
   556                           ; 1 bytes @ 0x6
   557                           
   558                           
   559                           ; 2 bytes @ 0x6
   560     0076                     	ds	2
   561     0078                     ??___lldiv:
   562     0078                     strncpy@size:	
   563                           ; 1 bytes @ 0x8
   564                           
   565                           
   566                           ; 2 bytes @ 0x8
   567     0078                     	ds	1
   568     0079                     ___lldiv@quotient:
   569                           
   570                           ; 4 bytes @ 0x9
   571     0079                     	ds	1
   572     007A                     strncpy@cp:
   573                           
   574                           ; 2 bytes @ 0xA
   575     007A                     	ds	3
   576     007D                     ___lldiv@counter:
   577                           
   578                           ; 1 bytes @ 0xD
   579     007D                     	ds	1
   580     007E                     ??_init_config:
   581                           
   582                           	psect	cstackBANK0
   583     0020                     __pcstackBANK0:	
   584                           ; 1 bytes @ 0xE
   585                           
   586     0020                     ??_strncpy:
   587     0020                     ?_init_uart:	
   588                           ; 1 bytes @ 0x0
   589                           
   590     0020                     init_uart@baud:	
   591                           ; 1 bytes @ 0x0
   592                           
   593                           
   594                           ; 4 bytes @ 0x0
   595     0020                     	ds	4
   596     0024                     ??_init_uart:
   597                           
   598                           ; 1 bytes @ 0x4
   599     0024                     	ds	4
   600     0028                     ??_main:
   601                           
   602                           ; 1 bytes @ 0x8
   603     0028                     	ds	1
   604     0029                     main@str1:
   605                           
   606                           ; 17 bytes @ 0x9
   607     0029                     	ds	17
   608     003A                     main@str2:
   609                           
   610                           ; 17 bytes @ 0x1A
   611     003A                     	ds	17
   612     004B                     main@j:
   613                           
   614                           ; 2 bytes @ 0x2B
   615     004B                     	ds	2
   616     004D                     main@i:
   617                           
   618                           ; 2 bytes @ 0x2D
   619     004D                     	ds	2
   620                           
   621                           	psect	maintext
   622     06CB                     __pmaintext:	
   623 ;;
   624 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   625 ;;
   626 ;; *************** function _main *****************
   627 ;; Defined at:
   628 ;;		line 43 in file "main.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;  str            90    0[BANK3 ] unsigned char [90]
   633 ;;  str2           17   26[BANK0 ] unsigned char [17]
   634 ;;  str1           17    9[BANK0 ] unsigned char [17]
   635 ;;  i               2   45[BANK0 ] unsigned int 
   636 ;;  j               2   43[BANK0 ] unsigned int 
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      void 
   639 ;; Registers used:
   640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : B00/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   646 ;;      Params:         0       0       0       0       0
   647 ;;      Locals:         0      38       0      90       0
   648 ;;      Temps:          0       1       0       0       0
   649 ;;      Totals:         0      39       0      90       0
   650 ;;Total ram usage:      129 bytes
   651 ;; Hardware stack levels required when called: 4
   652 ;; This function calls:
   653 ;;		_clcd_print
   654 ;;		_clear_screen
   655 ;;		_getstr
   656 ;;		_init_config
   657 ;;		_strlen
   658 ;;		_strncpy
   659 ;; This function is called by:
   660 ;;		Startup code after reset
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664     06CB                     _main:	
   665                           ;psect for function _main
   666                           
   667     06CB                     l1093:	
   668                           ;incstack = 0
   669                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   670                           
   671                           
   672                           ;main.c: 45:                 str1[i] = str[i];
   673     06CB  3090               	movlw	main@str& (0+255)
   674     06CC  0084               	movwf	4
   675     06CD  305A               	movlw	90
   676     06CE  00FF               	movwf	btemp+1
   677     06CF                     u520:
   678     06CF  1783               	bsf	3,7	;select IRP bank3
   679     06D0  0180               	clrf	0
   680     06D1  0A84               	incf	4,f
   681     06D2  0BFF               	decfsz	btemp+1,f
   682     06D3  2ECF               	goto	u520
   683     06D4  3029               	movlw	main@str1& (0+255)
   684     06D5  0084               	movwf	4
   685     06D6  3011               	movlw	17
   686     06D7  00FF               	movwf	btemp+1
   687     06D8                     u530:
   688     06D8  1383               	bcf	3,7	;select IRP bank0
   689     06D9  0180               	clrf	0
   690     06DA  0A84               	incf	4,f
   691     06DB  0BFF               	decfsz	btemp+1,f
   692     06DC  2ED8               	goto	u530
   693     06DD  303A               	movlw	main@str2& (0+255)
   694     06DE  0084               	movwf	4
   695     06DF  3011               	movlw	17
   696     06E0  00FF               	movwf	btemp+1
   697     06E1                     u540:
   698     06E1  0180               	clrf	0
   699     06E2  0A84               	incf	4,f
   700     06E3  0BFF               	decfsz	btemp+1,f
   701     06E4  2EE1               	goto	u540
   702     06E5                     l1095:
   703                           
   704                           ;main.c: 46:             }
   705     06E5  1283               	bcf	3,5	;RP0=0, select bank0
   706     06E6  1303               	bcf	3,6	;RP1=0, select bank0
   707     06E7  01CD               	clrf	main@i
   708     06E8  01CE               	clrf	main@i+1
   709     06E9                     l1097:
   710     06E9  01CB               	clrf	main@j
   711     06EA  01CC               	clrf	main@j+1
   712     06EB                     l1099:
   713                           
   714                           ;main.c: 47: 
   715     06EB  120A  118A  249E  120A  118A  	fcall	_init_config
   716     06F0                     l1101:
   717                           
   718                           ;main.c: 51:             }
   719     06F0  3090               	movlw	(low (main@str| (0+256)))& (0+255)
   720     06F1  120A  118A  2518  120A  118A  	fcall	_getstr
   721                           
   722                           ;main.c: 53: 
   723     06F6  2F98               	goto	l1125
   724     06F7                     l1103:
   725                           
   726                           ;main.c: 54:             if(i >= 32);main.c: 56:                 if(j == 0)
   727     06F7  3000               	movlw	0
   728     06F8  024E               	subwf	main@i+1,w
   729     06F9  3010               	movlw	16
   730     06FA  1903               	skipnz
   731     06FB  024D               	subwf	main@i,w
   732     06FC  1803               	skipnc
   733     06FD  2EFF               	goto	u551
   734     06FE  2F00               	goto	u550
   735     06FF                     u551:
   736     06FF  2F0C               	goto	l1107
   737     0700                     u550:
   738     0700                     l1105:
   739                           
   740                           ;main.c: 57:                 {;main.c: 58:                     strncpy(str1,"",strlen(st
      +                          r1));
   741     0700  084D               	movf	main@i,w
   742     0701  3E90               	addlw	(low (main@str| (0+256)))& (0+255)
   743     0702  0084               	movwf	4
   744     0703  1783               	bsf	3,7	;select IRP bank3
   745     0704  0800               	movf	0,w
   746     0705  00A8               	movwf	??_main
   747     0706  084D               	movf	main@i,w
   748     0707  3E29               	addlw	(low (main@str1| 0))& (0+255)
   749     0708  0084               	movwf	4
   750     0709  0828               	movf	??_main,w
   751     070A  1383               	bcf	3,7	;select IRP bank0
   752     070B  0080               	movwf	0
   753     070C                     l1107:
   754                           
   755                           ;main.c: 61:                     j=1;
   756     070C  3000               	movlw	0
   757     070D  024E               	subwf	main@i+1,w
   758     070E  3010               	movlw	16
   759     070F  1903               	skipnz
   760     0710  024D               	subwf	main@i,w
   761     0711  1C03               	skipc
   762     0712  2F14               	goto	u561
   763     0713  2F15               	goto	u560
   764     0714                     u561:
   765     0714  2F2B               	goto	l1113
   766     0715                     u560:
   767     0715                     l1109:
   768     0715  3000               	movlw	0
   769     0716  024E               	subwf	main@i+1,w
   770     0717  3020               	movlw	32
   771     0718  1903               	skipnz
   772     0719  024D               	subwf	main@i,w
   773     071A  1803               	skipnc
   774     071B  2F1D               	goto	u571
   775     071C  2F1E               	goto	u570
   776     071D                     u571:
   777     071D  2F2B               	goto	l1113
   778     071E                     u570:
   779     071E                     l1111:
   780                           
   781                           ;main.c: 62:                 };main.c: 63:                 str2[i-32] = str[i];
   782     071E  084D               	movf	main@i,w
   783     071F  3E90               	addlw	(low (main@str| (0+256)))& (0+255)
   784     0720  0084               	movwf	4
   785     0721  1783               	bsf	3,7	;select IRP bank3
   786     0722  0800               	movf	0,w
   787     0723  00A8               	movwf	??_main
   788     0724  084D               	movf	main@i,w
   789     0725  3EF0               	addlw	240
   790     0726  3E3A               	addlw	(low (main@str2| 0))& (0+255)
   791     0727  0084               	movwf	4
   792     0728  0828               	movf	??_main,w
   793     0729  1383               	bcf	3,7	;select IRP bank0
   794     072A  0080               	movwf	0
   795     072B                     l1113:
   796                           
   797                           ;main.c: 67: 
   798     072B  3000               	movlw	0
   799     072C  024E               	subwf	main@i+1,w
   800     072D  3020               	movlw	32
   801     072E  1903               	skipnz
   802     072F  024D               	subwf	main@i,w
   803     0730  1C03               	skipc
   804     0731  2F33               	goto	u581
   805     0732  2F34               	goto	u580
   806     0733                     u581:
   807     0733  2F92               	goto	l1123
   808     0734                     u580:
   809     0734                     l1115:
   810                           
   811                           ;main.c: 68:         str1[16] = '\0';;main.c: 69:         str2[16] = '\0';
   812     0734  084B               	movf	main@j,w
   813     0735  044C               	iorwf	main@j+1,w
   814     0736  1D03               	btfss	3,2
   815     0737  2F39               	goto	u591
   816     0738  2F3A               	goto	u590
   817     0739                     u591:
   818     0739  2F85               	goto	l1121
   819     073A                     u590:
   820     073A                     l1117:
   821                           
   822                           ;main.c: 70:         strncpy(str,"",strlen(str));;main.c: 71:         clear_screen();
   823     073A  3029               	movlw	(low (main@str1| 0))& (0+255)
   824     073B  00F4               	movwf	strncpy@to
   825     073C  3000               	movlw	0
   826     073D  00F5               	movwf	strncpy@to+1
   827     073E  3011               	movlw	(low (((STR_1+16)-__stringbase)| (0+32768)))& (0+255)
   828     073F  00F6               	movwf	strncpy@from
   829     0740  3080               	movlw	128
   830     0741  00F7               	movwf	strncpy@from+1
   831     0742  3029               	movlw	(low (main@str1| 0))& (0+255)
   832     0743  00F0               	movwf	strlen@s
   833     0744  3000               	movlw	0
   834     0745  00F1               	movwf	strlen@s+1
   835     0746  120A  118A  24BB  120A  118A  	fcall	_strlen
   836     074B  0871               	movf	?_strlen+1,w
   837     074C  00F9               	movwf	strncpy@size+1
   838     074D  0870               	movf	?_strlen,w
   839     074E  00F8               	movwf	strncpy@size
   840     074F  120A  118A  25AE  120A  118A  	fcall	_strncpy
   841                           
   842                           ;main.c: 72: 
   843     0754  3029               	movlw	(low (main@str1| 0))& (0+255)
   844     0755  00F4               	movwf	strncpy@to
   845     0756  3000               	movlw	0
   846     0757  00F5               	movwf	strncpy@to+1
   847     0758  303A               	movlw	(low (main@str2| 0))& (0+255)
   848     0759  00F6               	movwf	strncpy@from
   849     075A  3000               	movlw	0
   850     075B  00F7               	movwf	strncpy@from+1
   851     075C  3010               	movlw	16
   852     075D  00F8               	movwf	strncpy@size
   853     075E  3000               	movlw	0
   854     075F  00F9               	movwf	strncpy@size+1
   855     0760  120A  118A  25AE  120A  118A  	fcall	_strncpy
   856                           
   857                           ;main.c: 73:         clcd_print(str1,(0x80 + 0));
   858     0765  303A               	movlw	(low (main@str2| 0))& (0+255)
   859     0766  00F4               	movwf	strncpy@to
   860     0767  3000               	movlw	0
   861     0768  00F5               	movwf	strncpy@to+1
   862     0769  3011               	movlw	(low (((STR_1+16)-__stringbase)| (0+32768)))& (0+255)
   863     076A  00F6               	movwf	strncpy@from
   864     076B  3080               	movlw	128
   865     076C  00F7               	movwf	strncpy@from+1
   866     076D  303A               	movlw	(low (main@str2| 0))& (0+255)
   867     076E  00F0               	movwf	strlen@s
   868     076F  3000               	movlw	0
   869     0770  00F1               	movwf	strlen@s+1
   870     0771  120A  118A  24BB  120A  118A  	fcall	_strlen
   871     0776  0871               	movf	?_strlen+1,w
   872     0777  00F9               	movwf	strncpy@size+1
   873     0778  0870               	movf	?_strlen,w
   874     0779  00F8               	movwf	strncpy@size
   875     077A  120A  118A  25AE  120A  118A  	fcall	_strncpy
   876     077F                     l1119:
   877                           
   878                           ;main.c: 74:         clcd_print(str2,(0xC0 + 0));
   879     077F  3001               	movlw	1
   880     0780  1283               	bcf	3,5	;RP0=0, select bank0
   881     0781  1303               	bcf	3,6	;RP1=0, select bank0
   882     0782  00CB               	movwf	main@j
   883     0783  3000               	movlw	0
   884     0784  00CC               	movwf	main@j+1
   885     0785                     l1121:
   886                           
   887                           ;main.c: 76:     return;
   888     0785  084D               	movf	main@i,w
   889     0786  3E90               	addlw	(low (main@str| (0+256)))& (0+255)
   890     0787  0084               	movwf	4
   891     0788  1783               	bsf	3,7	;select IRP bank3
   892     0789  0800               	movf	0,w
   893     078A  00A8               	movwf	??_main
   894     078B  084D               	movf	main@i,w
   895     078C  3EE0               	addlw	224
   896     078D  3E3A               	addlw	(low (main@str2| 0))& (0+255)
   897     078E  0084               	movwf	4
   898     078F  0828               	movf	??_main,w
   899     0790  1383               	bcf	3,7	;select IRP bank0
   900     0791  0080               	movwf	0
   901     0792                     l1123:
   902     0792  3001               	movlw	1
   903     0793  07CD               	addwf	main@i,f
   904     0794  1803               	skipnc
   905     0795  0ACE               	incf	main@i+1,f
   906     0796  3000               	movlw	0
   907     0797  07CE               	addwf	main@i+1,f
   908     0798                     l1125:
   909                           
   910                           ;main.c: 53: 
   911     0798  3090               	movlw	(low (main@str| (0+256)))& (0+255)
   912     0799  00F0               	movwf	strlen@s
   913     079A  3001               	movlw	1
   914     079B  00F1               	movwf	strlen@s+1
   915     079C  120A  118A  24BB  120A  118A  	fcall	_strlen
   916     07A1  0871               	movf	?_strlen+1,w
   917     07A2  1283               	bcf	3,5	;RP0=0, select bank0
   918     07A3  1303               	bcf	3,6	;RP1=0, select bank0
   919     07A4  024E               	subwf	main@i+1,w
   920     07A5  1D03               	skipz
   921     07A6  2FA9               	goto	u605
   922     07A7  0870               	movf	?_strlen,w
   923     07A8  024D               	subwf	main@i,w
   924     07A9                     u605:
   925     07A9  1C03               	skipc
   926     07AA  2FAC               	goto	u601
   927     07AB  2FAD               	goto	u600
   928     07AC                     u601:
   929     07AC  2EF7               	goto	l1103
   930     07AD                     u600:
   931     07AD                     l1127:
   932     07AD  01B9               	clrf	main@str1+16
   933     07AE  01CA               	clrf	main@str2+16
   934     07AF                     l1129:
   935     07AF  3090               	movlw	(low (main@str| (0+256)))& (0+255)
   936     07B0  00F4               	movwf	strncpy@to
   937     07B1  3001               	movlw	1
   938     07B2  00F5               	movwf	strncpy@to+1
   939     07B3  3011               	movlw	(low (((STR_1+16)-__stringbase)| (0+32768)))& (0+255)
   940     07B4  00F6               	movwf	strncpy@from
   941     07B5  3080               	movlw	128
   942     07B6  00F7               	movwf	strncpy@from+1
   943     07B7  3090               	movlw	(low (main@str| (0+256)))& (0+255)
   944     07B8  00F0               	movwf	strlen@s
   945     07B9  3001               	movlw	1
   946     07BA  00F1               	movwf	strlen@s+1
   947     07BB  120A  118A  24BB  120A  118A  	fcall	_strlen
   948     07C0  0871               	movf	?_strlen+1,w
   949     07C1  00F9               	movwf	strncpy@size+1
   950     07C2  0870               	movf	?_strlen,w
   951     07C3  00F8               	movwf	strncpy@size
   952     07C4  120A  118A  25AE  120A  118A  	fcall	_strncpy
   953     07C9                     l1131:
   954     07C9  120A  118A  248D  120A  118A  	fcall	_clear_screen
   955     07CE                     l1133:
   956     07CE  3080               	movlw	128
   957     07CF  00F4               	movwf	clcd_print@addr
   958     07D0  3029               	movlw	(low (main@str1| 0))& (0+255)
   959     07D1  120A  118A  24F8  120A  118A  	fcall	_clcd_print
   960     07D6                     l1135:
   961     07D6  30C0               	movlw	192
   962     07D7  00F4               	movwf	clcd_print@addr
   963     07D8  303A               	movlw	(low (main@str2| 0))& (0+255)
   964     07D9  120A  118A  24F8  120A  118A  	fcall	_clcd_print
   965     07DE  2EF0               	goto	l1101
   966     07DF  120A  118A  2800   	ljmp	start
   967     07E2                     __end_of_main:
   968                           
   969                           	psect	text1
   970     05AE                     __ptext1:	
   971 ;; *************** function _strncpy *****************
   972 ;; Defined at:
   973 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strncpy.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  to              2    4[COMMON] PTR unsigned char 
   976 ;;		 -> main@str2(17), main@str1(17), main@str(90), 
   977 ;;  from            2    6[COMMON] PTR const unsigned char 
   978 ;;		 -> STR_4(1), STR_3(1), STR_2(1), main@str2(17), 
   979 ;;  size            2    8[COMMON] unsigned int 
   980 ;; Auto vars:     Size  Location     Type
   981 ;;  cp              2   10[COMMON] PTR unsigned char 
   982 ;;		 -> main@str2(17), main@str1(17), main@str(90), 
   983 ;; Return value:  Size  Location     Type
   984 ;;                  2    4[COMMON] PTR unsigned char 
   985 ;; Registers used:
   986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   992 ;;      Params:         6       0       0       0       0
   993 ;;      Locals:         2       0       0       0       0
   994 ;;      Temps:          0       5       0       0       0
   995 ;;      Totals:         8       5       0       0       0
   996 ;;Total ram usage:       13 bytes
   997 ;; Hardware stack levels used: 2
   998 ;; This function calls:
   999 ;;		Nothing
  1000 ;; This function is called by:
  1001 ;;		_main
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005     05AE                     _strncpy:	
  1006                           ;psect for function _strncpy
  1007                           
  1008     05AE                     l1075:	
  1009                           ;incstack = 0
  1010                           ; Regs used in _strncpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1011                           
  1012     05AE  0874               	movf	strncpy@to,w
  1013     05AF  00FA               	movwf	strncpy@cp
  1014     05B0  0875               	movf	strncpy@to+1,w
  1015     05B1  00FB               	movwf	strncpy@cp+1
  1016     05B2  2DE0               	goto	l1083
  1017     05B3                     l1077:
  1018     05B3  3001               	movlw	1
  1019     05B4  02F8               	subwf	strncpy@size,f
  1020     05B5  3000               	movlw	0
  1021     05B6  1C03               	skipc
  1022     05B7  03F9               	decf	strncpy@size+1,f
  1023     05B8  02F9               	subwf	strncpy@size+1,f
  1024     05B9                     l1079:
  1025     05B9  0877               	movf	strncpy@from+1,w
  1026     05BA  1283               	bcf	3,5	;RP0=0, select bank0
  1027     05BB  1303               	bcf	3,6	;RP1=0, select bank0
  1028     05BC  00A1               	movwf	??_strncpy+1
  1029     05BD  0876               	movf	strncpy@from,w
  1030     05BE  00A0               	movwf	??_strncpy
  1031     05BF  0AF6               	incf	strncpy@from,f
  1032     05C0  1903               	skipnz
  1033     05C1  0AF7               	incf	strncpy@from+1,f
  1034     05C2  0821               	movf	??_strncpy+1,w
  1035     05C3  00FF               	movwf	btemp+1
  1036     05C4  0820               	movf	??_strncpy,w
  1037     05C5  0084               	movwf	4
  1038     05C6  120A  118A  2003  120A  118A  	fcall	stringtab
  1039     05CB  00A2               	movwf	??_strncpy+2
  1040     05CC  087B               	movf	strncpy@cp+1,w
  1041     05CD  00A4               	movwf	??_strncpy+4
  1042     05CE  087A               	movf	strncpy@cp,w
  1043     05CF  00A3               	movwf	??_strncpy+3
  1044     05D0  0AFA               	incf	strncpy@cp,f
  1045     05D1  1903               	skipnz
  1046     05D2  0AFB               	incf	strncpy@cp+1,f
  1047     05D3  0823               	movf	??_strncpy+3,w
  1048     05D4  0084               	movwf	4
  1049     05D5  1783               	bsf	3,7
  1050     05D6  1C24               	btfss	??_strncpy+4,0
  1051     05D7  1383               	bcf	3,7
  1052     05D8  0822               	movf	??_strncpy+2,w
  1053     05D9  0080               	movwf	0
  1054     05DA  0800               	movf	0,w
  1055     05DB  1D03               	btfss	3,2
  1056     05DC  2DDE               	goto	u491
  1057     05DD  2DDF               	goto	u490
  1058     05DE                     u491:
  1059     05DE  2DE0               	goto	l1083
  1060     05DF                     u490:
  1061     05DF  2DF3               	goto	l1089
  1062     05E0                     l1083:
  1063     05E0  0878               	movf	strncpy@size,w
  1064     05E1  0479               	iorwf	strncpy@size+1,w
  1065     05E2  1D03               	btfss	3,2
  1066     05E3  2DE5               	goto	u501
  1067     05E4  2DE6               	goto	u500
  1068     05E5                     u501:
  1069     05E5  2DB3               	goto	l1077
  1070     05E6                     u500:
  1071     05E6  2DF3               	goto	l1089
  1072     05E7                     l1085:
  1073     05E7  087A               	movf	strncpy@cp,w
  1074     05E8  0084               	movwf	4
  1075     05E9  1783               	bsf	3,7
  1076     05EA  1C7B               	btfss	strncpy@cp+1,0
  1077     05EB  1383               	bcf	3,7
  1078     05EC  0180               	clrf	0
  1079     05ED                     l1087:
  1080     05ED  3001               	movlw	1
  1081     05EE  07FA               	addwf	strncpy@cp,f
  1082     05EF  1803               	skipnc
  1083     05F0  0AFB               	incf	strncpy@cp+1,f
  1084     05F1  3000               	movlw	0
  1085     05F2  07FB               	addwf	strncpy@cp+1,f
  1086     05F3                     l1089:
  1087     05F3  3001               	movlw	1
  1088     05F4  02F8               	subwf	strncpy@size,f
  1089     05F5  3000               	movlw	0
  1090     05F6  1C03               	skipc
  1091     05F7  03F9               	decf	strncpy@size+1,f
  1092     05F8  02F9               	subwf	strncpy@size+1,f
  1093     05F9  0A78               	incf	strncpy@size,w
  1094     05FA  1D03               	skipz
  1095     05FB  2E00               	goto	u511
  1096     05FC  0A79               	incf	strncpy@size+1,w
  1097     05FD  1D03               	btfss	3,2
  1098     05FE  2E00               	goto	u511
  1099     05FF  2E01               	goto	u510
  1100     0600                     u511:
  1101     0600  2DE7               	goto	l1085
  1102     0601                     u510:
  1103     0601                     l671:
  1104     0601  0008               	return
  1105     0602                     __end_of_strncpy:
  1106                           
  1107                           	psect	text2
  1108     04BB                     __ptext2:	
  1109 ;; *************** function _strlen *****************
  1110 ;; Defined at:
  1111 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  s               2    0[COMMON] PTR const unsigned char 
  1114 ;;		 -> main@str2(17), main@str1(17), main@str(90), 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  cp              2    2[COMMON] PTR const unsigned char 
  1117 ;;		 -> main@str2(17), main@str1(17), main@str(90), 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  2    0[COMMON] unsigned int 
  1120 ;; Registers used:
  1121 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1127 ;;      Params:         2       0       0       0       0
  1128 ;;      Locals:         2       0       0       0       0
  1129 ;;      Temps:          0       0       0       0       0
  1130 ;;      Totals:         4       0       0       0       0
  1131 ;;Total ram usage:        4 bytes
  1132 ;; Hardware stack levels used: 1
  1133 ;; This function calls:
  1134 ;;		Nothing
  1135 ;; This function is called by:
  1136 ;;		_main
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140     04BB                     _strlen:	
  1141                           ;psect for function _strlen
  1142                           
  1143     04BB                     l1065:	
  1144                           ;incstack = 0
  1145                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  1146                           
  1147     04BB  0870               	movf	strlen@s,w
  1148     04BC  00F2               	movwf	strlen@cp
  1149     04BD  0871               	movf	strlen@s+1,w
  1150     04BE  00F3               	movwf	strlen@cp+1
  1151     04BF  2CC6               	goto	l1069
  1152     04C0                     l1067:
  1153     04C0  3001               	movlw	1
  1154     04C1  07F2               	addwf	strlen@cp,f
  1155     04C2  1803               	skipnc
  1156     04C3  0AF3               	incf	strlen@cp+1,f
  1157     04C4  3000               	movlw	0
  1158     04C5  07F3               	addwf	strlen@cp+1,f
  1159     04C6                     l1069:
  1160     04C6  0872               	movf	strlen@cp,w
  1161     04C7  0084               	movwf	4
  1162     04C8  1783               	bsf	3,7
  1163     04C9  1C73               	btfss	strlen@cp+1,0
  1164     04CA  1383               	bcf	3,7
  1165     04CB  0800               	movf	0,w
  1166     04CC  1D03               	btfss	3,2
  1167     04CD  2CCF               	goto	u481
  1168     04CE  2CD0               	goto	u480
  1169     04CF                     u481:
  1170     04CF  2CC0               	goto	l1067
  1171     04D0                     u480:
  1172     04D0                     l1071:
  1173     04D0  0870               	movf	strlen@s,w
  1174     04D1  0272               	subwf	strlen@cp,w
  1175     04D2  00F0               	movwf	?_strlen
  1176     04D3  0871               	movf	strlen@s+1,w
  1177     04D4  1C03               	skipc
  1178     04D5  0A71               	incf	strlen@s+1,w
  1179     04D6  0273               	subwf	strlen@cp+1,w
  1180     04D7  00F1               	movwf	?_strlen+1
  1181     04D8                     l661:
  1182     04D8  0008               	return
  1183     04D9                     __end_of_strlen:
  1184                           
  1185                           	psect	text3
  1186     049E                     __ptext3:	
  1187 ;; *************** function _init_config *****************
  1188 ;; Defined at:
  1189 ;;		line 29 in file "main.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;		None
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;		None
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1203 ;;      Params:         0       0       0       0       0
  1204 ;;      Locals:         0       0       0       0       0
  1205 ;;      Temps:          0       0       0       0       0
  1206 ;;      Totals:         0       0       0       0       0
  1207 ;;Total ram usage:        0 bytes
  1208 ;; Hardware stack levels used: 1
  1209 ;; Hardware stack levels required when called: 3
  1210 ;; This function calls:
  1211 ;;		_init_clcd
  1212 ;;		_init_uart
  1213 ;;		_puts
  1214 ;; This function is called by:
  1215 ;;		_main
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219     049E                     _init_config:	
  1220                           ;psect for function _init_config
  1221                           
  1222     049E                     l1057:	
  1223                           ;incstack = 0
  1224                           ; Regs used in _init_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1225                           
  1226                           
  1227                           ;main.c: 32:     char str[90]="", str1[17]="", str2[17]="";
  1228     049E  120A  118A  2477  120A  118A  	fcall	_init_clcd
  1229                           
  1230                           ;main.c: 33:     unsigned int i = 0, j=0;
  1231     04A3  3000               	movlw	0
  1232     04A4  1283               	bcf	3,5	;RP0=0, select bank0
  1233     04A5  1303               	bcf	3,6	;RP1=0, select bank0
  1234     04A6  00A3               	movwf	init_uart@baud+3
  1235     04A7  3000               	movlw	0
  1236     04A8  00A2               	movwf	init_uart@baud+2
  1237     04A9  3025               	movlw	37
  1238     04AA  00A1               	movwf	init_uart@baud+1
  1239     04AB  3080               	movlw	128
  1240     04AC  00A0               	movwf	init_uart@baud
  1241     04AD  120A  118A  2548  120A  118A  	fcall	_init_uart
  1242     04B2                     l1059:
  1243                           
  1244                           ;main.c: 35: 
  1245     04B2  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1246     04B3  120A  118A  24D9  120A  118A  	fcall	_puts
  1247     04B8                     l1061:
  1248                           
  1249                           ;main.c: 38:         getstr(str);
  1250     04B8  170B               	bsf	11,6	;volatile
  1251     04B9                     l1063:
  1252                           
  1253                           ;main.c: 40:         while(i < strlen(str))
  1254     04B9  178B               	bsf	11,7	;volatile
  1255     04BA                     l100:
  1256     04BA  0008               	return
  1257     04BB                     __end_of_init_config:
  1258                           
  1259                           	psect	text4
  1260     04D9                     __ptext4:	
  1261 ;; *************** function _puts *****************
  1262 ;; Defined at:
  1263 ;;		line 51 in file "uart.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  s               1    wreg     PTR const unsigned char 
  1266 ;;		 -> STR_1(17), 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  s               1    2[COMMON] PTR const unsigned char 
  1269 ;;		 -> STR_1(17), 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1279 ;;      Params:         0       0       0       0       0
  1280 ;;      Locals:         1       0       0       0       0
  1281 ;;      Temps:          1       0       0       0       0
  1282 ;;      Totals:         2       0       0       0       0
  1283 ;;Total ram usage:        2 bytes
  1284 ;; Hardware stack levels used: 1
  1285 ;; Hardware stack levels required when called: 1
  1286 ;; This function calls:
  1287 ;;		_putchar
  1288 ;; This function is called by:
  1289 ;;		_init_config
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293     04D9                     _puts:	
  1294                           ;psect for function _puts
  1295                           
  1296                           
  1297                           ;incstack = 0
  1298                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1299                           ;puts@s stored from wreg
  1300     04D9  00F2               	movwf	puts@s
  1301     04DA                     l1021:
  1302                           
  1303                           ;uart.c: 51: void puts(const char *s);uart.c: 52: {;uart.c: 53:     while (*s)
  1304     04DA  2CEB               	goto	l1027
  1305     04DB                     l1023:
  1306                           
  1307                           ;uart.c: 54:     {;uart.c: 55:         putchar(*s++);
  1308     04DB  0872               	movf	puts@s,w
  1309     04DC  0084               	movwf	4
  1310     04DD  120A  118A  200D  120A  118A  	fcall	stringdir
  1311     04E2  120A  118A  2482  120A  118A  	fcall	_putchar
  1312     04E7                     l1025:
  1313     04E7  3001               	movlw	1
  1314     04E8  00F1               	movwf	??_puts
  1315     04E9  0871               	movf	??_puts,w
  1316     04EA  07F2               	addwf	puts@s,f
  1317     04EB                     l1027:
  1318                           
  1319                           ;uart.c: 53:     while (*s)
  1320     04EB  0872               	movf	puts@s,w
  1321     04EC  0084               	movwf	4
  1322     04ED  120A  118A  200D  120A  118A  	fcall	stringdir
  1323     04F2  3A00               	xorlw	0
  1324     04F3  1D03               	skipz
  1325     04F4  2CF6               	goto	u441
  1326     04F5  2CF7               	goto	u440
  1327     04F6                     u441:
  1328     04F6  2CDB               	goto	l1023
  1329     04F7                     u440:
  1330     04F7                     l70:
  1331     04F7  0008               	return
  1332     04F8                     __end_of_puts:
  1333                           
  1334                           	psect	text5
  1335     0482                     __ptext5:	
  1336 ;; *************** function _putchar *****************
  1337 ;; Defined at:
  1338 ;;		line 36 in file "uart.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  data            1    wreg     unsigned char 
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;  data            1    0[COMMON] unsigned char 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		wreg
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1352 ;;      Params:         0       0       0       0       0
  1353 ;;      Locals:         1       0       0       0       0
  1354 ;;      Temps:          0       0       0       0       0
  1355 ;;      Totals:         1       0       0       0       0
  1356 ;;Total ram usage:        1 bytes
  1357 ;; Hardware stack levels used: 1
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_puts
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365     0482                     _putchar:	
  1366                           ;psect for function _putchar
  1367                           
  1368                           
  1369                           ;incstack = 0
  1370                           ; Regs used in _putchar: [wreg]
  1371                           ;putchar@data stored from wreg
  1372     0482  00F0               	movwf	putchar@data
  1373     0483                     l977:
  1374                           
  1375                           ;uart.c: 36: void putchar(unsigned char data);uart.c: 37: {;uart.c: 39:     TXREG = data
      +                          ;
  1376     0483  0870               	movf	putchar@data,w
  1377     0484  1283               	bcf	3,5	;RP0=0, select bank0
  1378     0485  1303               	bcf	3,6	;RP1=0, select bank0
  1379     0486  0099               	movwf	25	;volatile
  1380     0487                     l62:	
  1381                           ;uart.c: 45:     } while (TXIF != 1);
  1382                           
  1383     0487  1E0C               	btfss	12,4	;volatile
  1384     0488  2C8A               	goto	u341
  1385     0489  2C8B               	goto	u340
  1386     048A                     u341:
  1387     048A  2C87               	goto	l62
  1388     048B                     u340:
  1389     048B                     l63:
  1390                           
  1391                           ;uart.c: 48:     TXIF = 0;
  1392     048B  120C               	bcf	12,4	;volatile
  1393     048C                     l64:
  1394     048C  0008               	return
  1395     048D                     __end_of_putchar:
  1396                           
  1397                           	psect	text6
  1398     0548                     __ptext6:	
  1399 ;; *************** function _init_uart *****************
  1400 ;; Defined at:
  1401 ;;		line 9 in file "uart.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  baud            4    0[BANK0 ] unsigned long 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      void 
  1408 ;; Registers used:
  1409 ;;		wreg, status,2, status,0, pclath, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1415 ;;      Params:         0       4       0       0       0
  1416 ;;      Locals:         0       0       0       0       0
  1417 ;;      Temps:          0       4       0       0       0
  1418 ;;      Totals:         0       8       0       0       0
  1419 ;;Total ram usage:        8 bytes
  1420 ;; Hardware stack levels used: 1
  1421 ;; Hardware stack levels required when called: 1
  1422 ;; This function calls:
  1423 ;;		___lldiv
  1424 ;; This function is called by:
  1425 ;;		_init_config
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429     0548                     _init_uart:	
  1430                           ;psect for function _init_uart
  1431                           
  1432     0548                     l1011:	
  1433                           ;incstack = 0
  1434                           ; Regs used in _init_uart: [wreg+status,2+status,0+pclath+cstack]
  1435                           
  1436                           
  1437                           ;uart.c: 9: void init_uart(unsigned long baud);uart.c: 10: {;uart.c: 12:     SPEN = 1;
  1438     0548  1283               	bcf	3,5	;RP0=0, select bank0
  1439     0549  1303               	bcf	3,6	;RP1=0, select bank0
  1440     054A  1798               	bsf	24,7	;volatile
  1441                           
  1442                           ;uart.c: 15:     CREN = 1;
  1443     054B  1618               	bsf	24,4	;volatile
  1444     054C                     l1013:
  1445                           
  1446                           ;uart.c: 18:     SPBRG = (20000000 / (16 * baud)) - 1;
  1447     054C  0820               	movf	init_uart@baud,w
  1448     054D  00A4               	movwf	??_init_uart
  1449     054E  0821               	movf	init_uart@baud+1,w
  1450     054F  00A5               	movwf	??_init_uart+1
  1451     0550  0822               	movf	init_uart@baud+2,w
  1452     0551  00A6               	movwf	??_init_uart+2
  1453     0552  0823               	movf	init_uart@baud+3,w
  1454     0553  00A7               	movwf	??_init_uart+3
  1455     0554  3004               	movlw	4
  1456     0555                     u425:
  1457     0555  1003               	clrc
  1458     0556  0DA4               	rlf	??_init_uart,f
  1459     0557  0DA5               	rlf	??_init_uart+1,f
  1460     0558  0DA6               	rlf	??_init_uart+2,f
  1461     0559  0DA7               	rlf	??_init_uart+3,f
  1462     055A                     u420:
  1463     055A  3EFF               	addlw	-1
  1464     055B  1D03               	skipz
  1465     055C  2D55               	goto	u425
  1466     055D  0827               	movf	??_init_uart+3,w
  1467     055E  00F3               	movwf	___lldiv@divisor+3
  1468     055F  0826               	movf	??_init_uart+2,w
  1469     0560  00F2               	movwf	___lldiv@divisor+2
  1470     0561  0825               	movf	??_init_uart+1,w
  1471     0562  00F1               	movwf	___lldiv@divisor+1
  1472     0563  0824               	movf	??_init_uart,w
  1473     0564  00F0               	movwf	___lldiv@divisor
  1474     0565  3001               	movlw	1
  1475     0566  00F7               	movwf	___lldiv@dividend+3
  1476     0567  3031               	movlw	49
  1477     0568  00F6               	movwf	___lldiv@dividend+2
  1478     0569  302D               	movlw	45
  1479     056A  00F5               	movwf	___lldiv@dividend+1
  1480     056B  3000               	movlw	0
  1481     056C  00F4               	movwf	___lldiv@dividend
  1482     056D  120A  118A  2665  120A  118A  	fcall	___lldiv
  1483     0572  0870               	movf	?___lldiv,w
  1484     0573  3EFF               	addlw	255
  1485     0574  1683               	bsf	3,5	;RP0=1, select bank1
  1486     0575  1303               	bcf	3,6	;RP1=0, select bank1
  1487     0576  0099               	movwf	25	;volatile
  1488     0577                     l52:
  1489     0577  0008               	return
  1490     0578                     __end_of_init_uart:
  1491                           
  1492                           	psect	text7
  1493     0665                     __ptext7:	
  1494 ;; *************** function ___lldiv *****************
  1495 ;; Defined at:
  1496 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  divisor         4    0[COMMON] unsigned long 
  1499 ;;  dividend        4    4[COMMON] unsigned long 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  quotient        4    9[COMMON] unsigned long 
  1502 ;;  counter         1   13[COMMON] unsigned char 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  4    0[COMMON] unsigned long 
  1505 ;; Registers used:
  1506 ;;		wreg, status,2, status,0
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1512 ;;      Params:         8       0       0       0       0
  1513 ;;      Locals:         5       0       0       0       0
  1514 ;;      Temps:          1       0       0       0       0
  1515 ;;      Totals:        14       0       0       0       0
  1516 ;;Total ram usage:       14 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_init_uart
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525     0665                     ___lldiv:	
  1526                           ;psect for function ___lldiv
  1527                           
  1528     0665                     l979:	
  1529                           ;incstack = 0
  1530                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1531                           
  1532     0665  3000               	movlw	0
  1533     0666  00FC               	movwf	___lldiv@quotient+3
  1534     0667  3000               	movlw	0
  1535     0668  00FB               	movwf	___lldiv@quotient+2
  1536     0669  3000               	movlw	0
  1537     066A  00FA               	movwf	___lldiv@quotient+1
  1538     066B  3000               	movlw	0
  1539     066C  00F9               	movwf	___lldiv@quotient
  1540     066D  0873               	movf	___lldiv@divisor+3,w
  1541     066E  0472               	iorwf	___lldiv@divisor+2,w
  1542     066F  0471               	iorwf	___lldiv@divisor+1,w
  1543     0670  0470               	iorwf	___lldiv@divisor,w
  1544     0671  1903               	skipnz
  1545     0672  2E74               	goto	u351
  1546     0673  2E75               	goto	u350
  1547     0674                     u351:
  1548     0674  2EC2               	goto	l999
  1549     0675                     u350:
  1550     0675                     l981:
  1551     0675  01FD               	clrf	___lldiv@counter
  1552     0676  0AFD               	incf	___lldiv@counter,f
  1553     0677  2E85               	goto	l985
  1554     0678                     l983:
  1555     0678  3001               	movlw	1
  1556     0679  00F8               	movwf	??___lldiv
  1557     067A                     u365:
  1558     067A  1003               	clrc
  1559     067B  0DF0               	rlf	___lldiv@divisor,f
  1560     067C  0DF1               	rlf	___lldiv@divisor+1,f
  1561     067D  0DF2               	rlf	___lldiv@divisor+2,f
  1562     067E  0DF3               	rlf	___lldiv@divisor+3,f
  1563     067F  0BF8               	decfsz	??___lldiv,f
  1564     0680  2E7A               	goto	u365
  1565     0681  3001               	movlw	1
  1566     0682  00F8               	movwf	??___lldiv
  1567     0683  0878               	movf	??___lldiv,w
  1568     0684  07FD               	addwf	___lldiv@counter,f
  1569     0685                     l985:
  1570     0685  1FF3               	btfss	___lldiv@divisor+3,7
  1571     0686  2E88               	goto	u371
  1572     0687  2E89               	goto	u370
  1573     0688                     u371:
  1574     0688  2E78               	goto	l983
  1575     0689                     u370:
  1576     0689                     l987:
  1577     0689  3001               	movlw	1
  1578     068A  00F8               	movwf	??___lldiv
  1579     068B                     u385:
  1580     068B  1003               	clrc
  1581     068C  0DF9               	rlf	___lldiv@quotient,f
  1582     068D  0DFA               	rlf	___lldiv@quotient+1,f
  1583     068E  0DFB               	rlf	___lldiv@quotient+2,f
  1584     068F  0DFC               	rlf	___lldiv@quotient+3,f
  1585     0690  0BF8               	decfsz	??___lldiv,f
  1586     0691  2E8B               	goto	u385
  1587     0692                     l989:
  1588     0692  0873               	movf	___lldiv@divisor+3,w
  1589     0693  0277               	subwf	___lldiv@dividend+3,w
  1590     0694  1D03               	skipz
  1591     0695  2EA0               	goto	u395
  1592     0696  0872               	movf	___lldiv@divisor+2,w
  1593     0697  0276               	subwf	___lldiv@dividend+2,w
  1594     0698  1D03               	skipz
  1595     0699  2EA0               	goto	u395
  1596     069A  0871               	movf	___lldiv@divisor+1,w
  1597     069B  0275               	subwf	___lldiv@dividend+1,w
  1598     069C  1D03               	skipz
  1599     069D  2EA0               	goto	u395
  1600     069E  0870               	movf	___lldiv@divisor,w
  1601     069F  0274               	subwf	___lldiv@dividend,w
  1602     06A0                     u395:
  1603     06A0  1C03               	skipc
  1604     06A1  2EA3               	goto	u391
  1605     06A2  2EA4               	goto	u390
  1606     06A3                     u391:
  1607     06A3  2EB3               	goto	l995
  1608     06A4                     u390:
  1609     06A4                     l991:
  1610     06A4  0870               	movf	___lldiv@divisor,w
  1611     06A5  02F4               	subwf	___lldiv@dividend,f
  1612     06A6  0871               	movf	___lldiv@divisor+1,w
  1613     06A7  1C03               	skipc
  1614     06A8  0F71               	incfsz	___lldiv@divisor+1,w
  1615     06A9  02F5               	subwf	___lldiv@dividend+1,f
  1616     06AA  0872               	movf	___lldiv@divisor+2,w
  1617     06AB  1C03               	skipc
  1618     06AC  0F72               	incfsz	___lldiv@divisor+2,w
  1619     06AD  02F6               	subwf	___lldiv@dividend+2,f
  1620     06AE  0873               	movf	___lldiv@divisor+3,w
  1621     06AF  1C03               	skipc
  1622     06B0  0F73               	incfsz	___lldiv@divisor+3,w
  1623     06B1  02F7               	subwf	___lldiv@dividend+3,f
  1624     06B2                     l993:
  1625     06B2  1479               	bsf	___lldiv@quotient,0
  1626     06B3                     l995:
  1627     06B3  3001               	movlw	1
  1628     06B4                     u405:
  1629     06B4  1003               	clrc
  1630     06B5  0CF3               	rrf	___lldiv@divisor+3,f
  1631     06B6  0CF2               	rrf	___lldiv@divisor+2,f
  1632     06B7  0CF1               	rrf	___lldiv@divisor+1,f
  1633     06B8  0CF0               	rrf	___lldiv@divisor,f
  1634     06B9  3EFF               	addlw	-1
  1635     06BA  1D03               	skipz
  1636     06BB  2EB4               	goto	u405
  1637     06BC                     l997:
  1638     06BC  3001               	movlw	1
  1639     06BD  02FD               	subwf	___lldiv@counter,f
  1640     06BE  1D03               	btfss	3,2
  1641     06BF  2EC1               	goto	u411
  1642     06C0  2EC2               	goto	u410
  1643     06C1                     u411:
  1644     06C1  2E89               	goto	l987
  1645     06C2                     u410:
  1646     06C2                     l999:
  1647     06C2  087C               	movf	___lldiv@quotient+3,w
  1648     06C3  00F3               	movwf	?___lldiv+3
  1649     06C4  087B               	movf	___lldiv@quotient+2,w
  1650     06C5  00F2               	movwf	?___lldiv+2
  1651     06C6  087A               	movf	___lldiv@quotient+1,w
  1652     06C7  00F1               	movwf	?___lldiv+1
  1653     06C8  0879               	movf	___lldiv@quotient,w
  1654     06C9  00F0               	movwf	?___lldiv
  1655     06CA                     l243:
  1656     06CA  0008               	return
  1657     06CB                     __end_of___lldiv:
  1658                           
  1659                           	psect	text8
  1660     0477                     __ptext8:	
  1661 ;; *************** function _init_clcd *****************
  1662 ;; Defined at:
  1663 ;;		line 49 in file "clcd.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;		None
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;		None
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0, pclath, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1677 ;;      Params:         0       0       0       0       0
  1678 ;;      Locals:         0       0       0       0       0
  1679 ;;      Temps:          0       0       0       0       0
  1680 ;;      Totals:         0       0       0       0       0
  1681 ;;Total ram usage:        0 bytes
  1682 ;; Hardware stack levels used: 1
  1683 ;; Hardware stack levels required when called: 2
  1684 ;; This function calls:
  1685 ;;		_init_display_controller
  1686 ;; This function is called by:
  1687 ;;		_init_config
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691     0477                     _init_clcd:	
  1692                           ;psect for function _init_clcd
  1693                           
  1694     0477                     l1003:	
  1695                           ;incstack = 0
  1696                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  1697                           
  1698                           
  1699                           ;clcd.c: 52:     TRISD = 0x00;
  1700     0477  1683               	bsf	3,5	;RP0=1, select bank1
  1701     0478  1303               	bcf	3,6	;RP1=0, select bank1
  1702     0479  0188               	clrf	8	;volatile
  1703     047A                     l1005:
  1704                           
  1705                           ;clcd.c: 55:     TRISE2 = 0;
  1706     047A  1109               	bcf	9,2	;volatile
  1707     047B                     l1007:
  1708                           
  1709                           ;clcd.c: 56:     TRISE1 = 0;
  1710     047B  1089               	bcf	9,1	;volatile
  1711     047C                     l1009:
  1712                           
  1713                           ;clcd.c: 58:     init_display_controller();
  1714     047C  120A  118A  2602  120A  118A  	fcall	_init_display_controller
  1715     0481                     l23:
  1716     0481  0008               	return
  1717     0482                     __end_of_init_clcd:
  1718                           
  1719                           	psect	text9
  1720     0602                     __ptext9:	
  1721 ;; *************** function _init_display_controller *****************
  1722 ;; Defined at:
  1723 ;;		line 26 in file "clcd.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0, pclath, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1737 ;;      Params:         0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0
  1739 ;;      Temps:          2       0       0       0       0
  1740 ;;      Totals:         2       0       0       0       0
  1741 ;;Total ram usage:        2 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; Hardware stack levels required when called: 1
  1744 ;; This function calls:
  1745 ;;		_clcd_write
  1746 ;; This function is called by:
  1747 ;;		_init_clcd
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751     0602                     _init_display_controller:	
  1752                           ;psect for function _init_display_controller
  1753                           
  1754     0602                     l953:	
  1755                           ;incstack = 0
  1756                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  1757                           
  1758                           
  1759                           ;clcd.c: 29:     _delay((unsigned long)((30)*(20000000/4000.0)));
  1760     0602  30C3               	movlw	195
  1761     0603  00F5               	movwf	??_init_display_controller+1
  1762     0604  30CD               	movlw	205
  1763     0605  00F4               	movwf	??_init_display_controller
  1764     0606                     u617:
  1765     0606  0BF4               	decfsz	??_init_display_controller,f
  1766     0607  2E06               	goto	u617
  1767     0608  0BF5               	decfsz	??_init_display_controller+1,f
  1768     0609  2E06               	goto	u617
  1769     060A                     l955:
  1770                           
  1771                           ;clcd.c: 32:     clcd_write(0x33, 0);
  1772     060A  01F0               	clrf	clcd_write@mode
  1773     060B  3033               	movlw	51
  1774     060C  120A  118A  2578  120A  118A  	fcall	_clcd_write
  1775     0611                     l957:
  1776                           
  1777                           ;clcd.c: 33:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1778     0611  301B               	movlw	27
  1779     0612  00F5               	movwf	??_init_display_controller+1
  1780     0613  309E               	movlw	158
  1781     0614  00F4               	movwf	??_init_display_controller
  1782     0615                     u627:
  1783     0615  0BF4               	decfsz	??_init_display_controller,f
  1784     0616  2E15               	goto	u627
  1785     0617  0BF5               	decfsz	??_init_display_controller+1,f
  1786     0618  2E15               	goto	u627
  1787     0619  0000               	nop
  1788                           
  1789                           ;clcd.c: 34:     clcd_write(0x33, 0);
  1790     061A  01F0               	clrf	clcd_write@mode
  1791     061B  3033               	movlw	51
  1792     061C  120A  118A  2578  120A  118A  	fcall	_clcd_write
  1793     0621                     l959:
  1794                           
  1795                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1796     0621  30A6               	movlw	166
  1797     0622  00F4               	movwf	??_init_display_controller
  1798     0623                     u637:
  1799     0623  0BF4               	decfsz	??_init_display_controller,f
  1800     0624  2E23               	goto	u637
  1801     0625  0000               	nop
  1802     0626                     l961:
  1803                           
  1804                           ;clcd.c: 36:     clcd_write(0x33, 0);
  1805     0626  01F0               	clrf	clcd_write@mode
  1806     0627  3033               	movlw	51
  1807     0628  120A  118A  2578  120A  118A  	fcall	_clcd_write
  1808     062D                     l963:
  1809                           
  1810                           ;clcd.c: 37:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1811     062D  2E2E               	nop2	;2 cycle nop
  1812     062E  2E2F               	nop2	;2 cycle nop
  1813     062F  0000               	nop
  1814     0630                     l965:
  1815                           
  1816                           ;clcd.c: 39:     clcd_write(0x02, 0);
  1817     0630  01F0               	clrf	clcd_write@mode
  1818     0631  3002               	movlw	2
  1819     0632  120A  118A  2578  120A  118A  	fcall	_clcd_write
  1820     0637                     l967:
  1821                           
  1822                           ;clcd.c: 40:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1823     0637  30A6               	movlw	166
  1824     0638  00F4               	movwf	??_init_display_controller
  1825     0639                     u647:
  1826     0639  0BF4               	decfsz	??_init_display_controller,f
  1827     063A  2E39               	goto	u647
  1828     063B  0000               	nop
  1829                           
  1830                           ;clcd.c: 41:     clcd_write(0x28, 0);
  1831     063C  01F0               	clrf	clcd_write@mode
  1832     063D  3028               	movlw	40
  1833     063E  120A  118A  2578  120A  118A  	fcall	_clcd_write
  1834     0643                     l969:
  1835                           
  1836                           ;clcd.c: 42:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1837     0643  30A6               	movlw	166
  1838     0644  00F4               	movwf	??_init_display_controller
  1839     0645                     u657:
  1840     0645  0BF4               	decfsz	??_init_display_controller,f
  1841     0646  2E45               	goto	u657
  1842     0647  0000               	nop
  1843     0648                     l971:
  1844                           
  1845                           ;clcd.c: 43:     clcd_write(0x01, 0);
  1846     0648  01F0               	clrf	clcd_write@mode
  1847     0649  3001               	movlw	1
  1848     064A  120A  118A  2578  120A  118A  	fcall	_clcd_write
  1849                           
  1850                           ;clcd.c: 44:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1851     064F  3004               	movlw	4
  1852     0650  00F5               	movwf	??_init_display_controller+1
  1853     0651  303D               	movlw	61
  1854     0652  00F4               	movwf	??_init_display_controller
  1855     0653                     u667:
  1856     0653  0BF4               	decfsz	??_init_display_controller,f
  1857     0654  2E53               	goto	u667
  1858     0655  0BF5               	decfsz	??_init_display_controller+1,f
  1859     0656  2E53               	goto	u667
  1860     0657  2E58               	nop2
  1861     0658                     l973:
  1862                           
  1863                           ;clcd.c: 45:     clcd_write(0x0C, 0);
  1864     0658  01F0               	clrf	clcd_write@mode
  1865     0659  300C               	movlw	12
  1866     065A  120A  118A  2578  120A  118A  	fcall	_clcd_write
  1867     065F                     l975:
  1868                           
  1869                           ;clcd.c: 46:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1870     065F  30A6               	movlw	166
  1871     0660  00F4               	movwf	??_init_display_controller
  1872     0661                     u677:
  1873     0661  0BF4               	decfsz	??_init_display_controller,f
  1874     0662  2E61               	goto	u677
  1875     0663  0000               	nop
  1876     0664                     l20:
  1877     0664  0008               	return
  1878     0665                     __end_of_init_display_controller:
  1879                           
  1880                           	psect	text10
  1881     0518                     __ptext10:	
  1882 ;; *************** function _getstr *****************
  1883 ;; Defined at:
  1884 ;;		line 14 in file "main.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  str             1    wreg     PTR unsigned char 
  1887 ;;		 -> main@str(90), 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  str             1    2[COMMON] PTR unsigned char 
  1890 ;;		 -> main@str(90), 
  1891 ;;  i               1    3[COMMON] unsigned char 
  1892 ;;  j               1    1[COMMON] unsigned char 
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1902 ;;      Params:         0       0       0       0       0
  1903 ;;      Locals:         3       0       0       0       0
  1904 ;;      Temps:          1       0       0       0       0
  1905 ;;      Totals:         4       0       0       0       0
  1906 ;;Total ram usage:        4 bytes
  1907 ;; Hardware stack levels used: 1
  1908 ;; Hardware stack levels required when called: 1
  1909 ;; This function calls:
  1910 ;;		_getchar
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916     0518                     _getstr:	
  1917                           ;psect for function _getstr
  1918                           
  1919                           
  1920                           ;incstack = 0
  1921                           ; Regs used in _getstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1922                           ;getstr@str stored from wreg
  1923     0518  00F2               	movwf	getstr@str
  1924     0519                     l1041:
  1925                           
  1926                           ;main.c: 14: };main.c: 16: static void init_config(void) {;main.c: 17: 
  1927     0519  01F3               	clrf	getstr@i
  1928     051A                     l1043:
  1929                           
  1930                           ;main.c: 19:     init_clcd();;main.c: 20:     init_uart(9600);
  1931     051A  0873               	movf	getstr@i,w
  1932     051B  0772               	addwf	getstr@str,w
  1933     051C  00F0               	movwf	??_getstr
  1934     051D  0870               	movf	??_getstr,w
  1935     051E  0084               	movwf	4
  1936     051F  120A  118A  246E  120A  118A  	fcall	_getchar
  1937     0524  1783               	bsf	3,7	;select IRP bank2
  1938     0525  0080               	movwf	0
  1939     0526                     l1045:
  1940                           
  1941                           ;main.c: 21: 
  1942     0526  0873               	movf	getstr@i,w
  1943     0527  0772               	addwf	getstr@str,w
  1944     0528  00F0               	movwf	??_getstr
  1945     0529  0870               	movf	??_getstr,w
  1946     052A  0084               	movwf	4
  1947     052B  0800               	movf	0,w
  1948     052C  00F1               	movwf	getstr@j
  1949     052D                     l1047:
  1950                           
  1951                           ;main.c: 22:     puts("UART Test Code\n\r");
  1952     052D  3001               	movlw	1
  1953     052E  00F0               	movwf	??_getstr
  1954     052F  0870               	movf	??_getstr,w
  1955     0530  07F3               	addwf	getstr@i,f
  1956     0531                     l1049:
  1957                           
  1958                           ;main.c: 23: 
  1959     0531  300A               	movlw	10
  1960     0532  0671               	xorwf	getstr@j,w
  1961     0533  1903               	btfsc	3,2
  1962     0534  2D36               	goto	u461
  1963     0535  2D37               	goto	u460
  1964     0536                     u461:
  1965     0536  2D3D               	goto	l1053
  1966     0537                     u460:
  1967     0537                     l1051:
  1968     0537  300D               	movlw	13
  1969     0538  0671               	xorwf	getstr@j,w
  1970     0539  1D03               	btfss	3,2
  1971     053A  2D3C               	goto	u471
  1972     053B  2D3D               	goto	u470
  1973     053C                     u471:
  1974     053C  2D1A               	goto	l1043
  1975     053D                     u470:
  1976     053D                     l1053:
  1977                           
  1978                           ;main.c: 25:     PEIE = 1;
  1979     053D  3001               	movlw	1
  1980     053E  00F0               	movwf	??_getstr
  1981     053F  0870               	movf	??_getstr,w
  1982     0540  07F3               	addwf	getstr@i,f
  1983     0541                     l1055:
  1984                           
  1985                           ;main.c: 26: 
  1986     0541  0873               	movf	getstr@i,w
  1987     0542  0772               	addwf	getstr@str,w
  1988     0543  00F0               	movwf	??_getstr
  1989     0544  0870               	movf	??_getstr,w
  1990     0545  0084               	movwf	4
  1991     0546  0180               	clrf	0
  1992     0547                     l97:
  1993     0547  0008               	return
  1994     0548                     __end_of_getstr:
  1995                           
  1996                           	psect	text11
  1997     046E                     __ptext11:	
  1998 ;; *************** function _getchar *****************
  1999 ;; Defined at:
  2000 ;;		line 21 in file "uart.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      unsigned char 
  2007 ;; Registers used:
  2008 ;;		wreg
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2014 ;;      Params:         0       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0
  2016 ;;      Temps:          0       0       0       0       0
  2017 ;;      Totals:         0       0       0       0       0
  2018 ;;Total ram usage:        0 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_getstr
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027     046E                     _getchar:	
  2028                           ;psect for function _getchar
  2029                           
  2030     046E                     l1015:	
  2031                           ;incstack = 0
  2032                           ; Regs used in _getchar: [wreg]
  2033                           
  2034     046E                     l55:	
  2035                           ;uart.c: 27:     }
  2036                           
  2037                           
  2038                           ;uart.c: 24:     while (RCIF != 1)
  2039     046E  1283               	bcf	3,5	;RP0=0, select bank0
  2040     046F  1303               	bcf	3,6	;RP1=0, select bank0
  2041     0470  1E8C               	btfss	12,5	;volatile
  2042     0471  2C73               	goto	u431
  2043     0472  2C74               	goto	u430
  2044     0473                     u431:
  2045     0473  2C6E               	goto	l55
  2046     0474                     u430:
  2047     0474                     l57:
  2048                           
  2049                           ;uart.c: 30:     RCIF = 0;
  2050     0474  128C               	bcf	12,5	;volatile
  2051     0475                     l1017:
  2052                           
  2053                           ;uart.c: 33:     return RCREG;
  2054     0475  081A               	movf	26,w	;volatile
  2055     0476                     l58:
  2056     0476  0008               	return
  2057     0477                     __end_of_getchar:
  2058                           
  2059                           	psect	text12
  2060     048D                     __ptext12:	
  2061 ;; *************** function _clear_screen *****************
  2062 ;; Defined at:
  2063 ;;		line 78 in file "clcd.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0, pclath, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2077 ;;      Params:         0       0       0       0       0
  2078 ;;      Locals:         0       0       0       0       0
  2079 ;;      Temps:          2       0       0       0       0
  2080 ;;      Totals:         2       0       0       0       0
  2081 ;;Total ram usage:        2 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 1
  2084 ;; This function calls:
  2085 ;;		_clcd_write
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091     048D                     _clear_screen:	
  2092                           ;psect for function _clear_screen
  2093                           
  2094     048D                     l1037:	
  2095                           ;incstack = 0
  2096                           ; Regs used in _clear_screen: [wreg+status,2+status,0+pclath+cstack]
  2097                           
  2098                           
  2099                           ;clcd.c: 80:     clcd_write(0x01, 0);
  2100     048D  01F0               	clrf	clcd_write@mode
  2101     048E  3001               	movlw	1
  2102     048F  120A  118A  2578  120A  118A  	fcall	_clcd_write
  2103     0494                     l1039:
  2104                           
  2105                           ;clcd.c: 81:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  2106     0494  3004               	movlw	4
  2107     0495  00F5               	movwf	??_clear_screen+1
  2108     0496  303D               	movlw	61
  2109     0497  00F4               	movwf	??_clear_screen
  2110     0498                     u687:
  2111     0498  0BF4               	decfsz	??_clear_screen,f
  2112     0499  2C98               	goto	u687
  2113     049A  0BF5               	decfsz	??_clear_screen+1,f
  2114     049B  2C98               	goto	u687
  2115     049C  2C9D               	nop2
  2116     049D                     l35:
  2117     049D  0008               	return
  2118     049E                     __end_of_clear_screen:
  2119                           
  2120                           	psect	text13
  2121     04F8                     __ptext13:	
  2122 ;; *************** function _clcd_print *****************
  2123 ;; Defined at:
  2124 ;;		line 67 in file "clcd.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;  str             1    wreg     PTR const unsigned char 
  2127 ;;		 -> main@str2(17), main@str1(17), 
  2128 ;;  addr            1    4[COMMON] unsigned char 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  str             1    6[COMMON] PTR const unsigned char 
  2131 ;;		 -> main@str2(17), main@str1(17), 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2141 ;;      Params:         1       0       0       0       0
  2142 ;;      Locals:         1       0       0       0       0
  2143 ;;      Temps:          1       0       0       0       0
  2144 ;;      Totals:         3       0       0       0       0
  2145 ;;Total ram usage:        3 bytes
  2146 ;; Hardware stack levels used: 1
  2147 ;; Hardware stack levels required when called: 1
  2148 ;; This function calls:
  2149 ;;		_clcd_write
  2150 ;; This function is called by:
  2151 ;;		_main
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155     04F8                     _clcd_print:	
  2156                           ;psect for function _clcd_print
  2157                           
  2158                           
  2159                           ;incstack = 0
  2160                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2161                           ;clcd_print@str stored from wreg
  2162     04F8  00F6               	movwf	clcd_print@str
  2163     04F9                     l1029:
  2164                           
  2165                           ;clcd.c: 67: void clcd_print(const char *str, unsigned char addr);clcd.c: 68: {;clcd.c: 
      +                          69:     clcd_write(addr, 0);
  2166     04F9  01F0               	clrf	clcd_write@mode
  2167     04FA  0874               	movf	clcd_print@addr,w
  2168     04FB  120A  118A  2578  120A  118A  	fcall	_clcd_write
  2169                           
  2170                           ;clcd.c: 71:     while (*str != '\0')
  2171     0500  2D0F               	goto	l1035
  2172     0501                     l1031:
  2173                           
  2174                           ;clcd.c: 72:     {;clcd.c: 73:         clcd_write(*str, 1);
  2175     0501  01F0               	clrf	clcd_write@mode
  2176     0502  0AF0               	incf	clcd_write@mode,f
  2177     0503  0876               	movf	clcd_print@str,w
  2178     0504  0084               	movwf	4
  2179     0505  0800               	movf	0,w
  2180     0506  120A  118A  2578  120A  118A  	fcall	_clcd_write
  2181     050B                     l1033:
  2182                           
  2183                           ;clcd.c: 74:         str++;
  2184     050B  3001               	movlw	1
  2185     050C  00F5               	movwf	??_clcd_print
  2186     050D  0875               	movf	??_clcd_print,w
  2187     050E  07F6               	addwf	clcd_print@str,f
  2188     050F                     l1035:
  2189                           
  2190                           ;clcd.c: 71:     while (*str != '\0')
  2191     050F  0876               	movf	clcd_print@str,w
  2192     0510  0084               	movwf	4
  2193     0511  1383               	bcf	3,7	;select IRP bank0
  2194     0512  0800               	movf	0,w
  2195     0513  1D03               	btfss	3,2
  2196     0514  2D16               	goto	u451
  2197     0515  2D17               	goto	u450
  2198     0516                     u451:
  2199     0516  2D01               	goto	l1031
  2200     0517                     u450:
  2201     0517                     l32:
  2202     0517  0008               	return
  2203     0518                     __end_of_clcd_print:
  2204                           
  2205                           	psect	text14
  2206     0578                     __ptext14:	
  2207 ;; *************** function _clcd_write *****************
  2208 ;; Defined at:
  2209 ;;		line 9 in file "clcd.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  byte            1    wreg     unsigned char 
  2212 ;;  mode            1    0[COMMON] unsigned char 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  byte            1    3[COMMON] unsigned char 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2224 ;;      Params:         1       0       0       0       0
  2225 ;;      Locals:         1       0       0       0       0
  2226 ;;      Temps:          2       0       0       0       0
  2227 ;;      Totals:         4       0       0       0       0
  2228 ;;Total ram usage:        4 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; This function calls:
  2231 ;;		Nothing
  2232 ;; This function is called by:
  2233 ;;		_init_display_controller
  2234 ;;		_clcd_print
  2235 ;;		_clear_screen
  2236 ;;		_clcd_putch
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240     0578                     _clcd_write:	
  2241                           ;psect for function _clcd_write
  2242                           
  2243                           
  2244                           ;incstack = 0
  2245                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  2246                           ;clcd_write@byte stored from wreg
  2247     0578  00F3               	movwf	clcd_write@byte
  2248     0579                     l933:
  2249                           
  2250                           ;clcd.c: 9: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 10: {
      +                          ;clcd.c: 11:     RE2 = mode;
  2251     0579  1870               	btfsc	clcd_write@mode,0
  2252     057A  2D7C               	goto	u311
  2253     057B  2D80               	goto	u310
  2254     057C                     u311:
  2255     057C  1283               	bcf	3,5	;RP0=0, select bank0
  2256     057D  1303               	bcf	3,6	;RP1=0, select bank0
  2257     057E  1509               	bsf	9,2	;volatile
  2258     057F  2D83               	goto	u324
  2259     0580                     u310:
  2260     0580  1283               	bcf	3,5	;RP0=0, select bank0
  2261     0581  1303               	bcf	3,6	;RP1=0, select bank0
  2262     0582  1109               	bcf	9,2	;volatile
  2263     0583                     u324:
  2264     0583                     l935:
  2265                           
  2266                           ;clcd.c: 13:     PORTD = byte & 0xF0;
  2267     0583  0873               	movf	clcd_write@byte,w
  2268     0584  39F0               	andlw	240
  2269     0585  0088               	movwf	8	;volatile
  2270     0586                     l937:
  2271                           
  2272                           ;clcd.c: 14:     RE1 = 1;
  2273     0586  1489               	bsf	9,1	;volatile
  2274     0587                     l939:
  2275                           
  2276                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2277     0587  30A6               	movlw	166
  2278     0588  00F1               	movwf	??_clcd_write
  2279     0589                     u697:
  2280     0589  0BF1               	decfsz	??_clcd_write,f
  2281     058A  2D89               	goto	u697
  2282     058B  0000               	nop
  2283     058C                     l941:
  2284                           
  2285                           ;clcd.c: 16:     RE1 = 0;
  2286     058C  1283               	bcf	3,5	;RP0=0, select bank0
  2287     058D  1303               	bcf	3,6	;RP1=0, select bank0
  2288     058E  1089               	bcf	9,1	;volatile
  2289     058F                     l943:
  2290                           
  2291                           ;clcd.c: 18:     PORTD = (byte & 0x0F) << 4;
  2292     058F  0873               	movf	clcd_write@byte,w
  2293     0590  390F               	andlw	15
  2294     0591  00F1               	movwf	??_clcd_write
  2295     0592  3003               	movlw	3
  2296     0593                     u335:
  2297     0593  1003               	clrc
  2298     0594  0DF1               	rlf	??_clcd_write,f
  2299     0595  3EFF               	addlw	-1
  2300     0596  1D03               	skipz
  2301     0597  2D93               	goto	u335
  2302     0598  1003               	clrc
  2303     0599  0D71               	rlf	??_clcd_write,w
  2304     059A  0088               	movwf	8	;volatile
  2305     059B                     l945:
  2306                           
  2307                           ;clcd.c: 19:     RE1 = 1;
  2308     059B  1489               	bsf	9,1	;volatile
  2309     059C                     l947:
  2310                           
  2311                           ;clcd.c: 20:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2312     059C  30A6               	movlw	166
  2313     059D  00F1               	movwf	??_clcd_write
  2314     059E                     u707:
  2315     059E  0BF1               	decfsz	??_clcd_write,f
  2316     059F  2D9E               	goto	u707
  2317     05A0  0000               	nop
  2318     05A1                     l949:
  2319                           
  2320                           ;clcd.c: 21:     RE1 = 0;
  2321     05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2322     05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2323     05A3  1089               	bcf	9,1	;volatile
  2324     05A4                     l951:
  2325                           
  2326                           ;clcd.c: 23:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  2327     05A4  301B               	movlw	27
  2328     05A5  00F2               	movwf	??_clcd_write+1
  2329     05A6  309E               	movlw	158
  2330     05A7  00F1               	movwf	??_clcd_write
  2331     05A8                     u717:
  2332     05A8  0BF1               	decfsz	??_clcd_write,f
  2333     05A9  2DA8               	goto	u717
  2334     05AA  0BF2               	decfsz	??_clcd_write+1,f
  2335     05AB  2DA8               	goto	u717
  2336     05AC  0000               	nop
  2337     05AD                     l17:
  2338     05AD  0008               	return
  2339     05AE                     __end_of_clcd_write:
  2340     007E                     btemp	set	126	;btemp
  2341     007E                     wtemp0	set	126
  2342                           
  2343                           	psect	config
  2344                           
  2345                           ;Config register CONFIG @ 0x2007
  2346                           ;	Oscillator Selection bits
  2347                           ;	FOSC = 0x3, unprogrammed default
  2348                           ;	Watchdog Timer Enable bit
  2349                           ;	WDTE = OFF, WDT disabled
  2350                           ;	Power-up Timer Enable bit
  2351                           ;	PWRTE = 0x1, unprogrammed default
  2352                           ;	Brown-out Reset Enable bit
  2353                           ;	BOREN = 0x1, unprogrammed default
  2354                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2355                           ;	LVP = 0x1, unprogrammed default
  2356                           ;	Data EEPROM Memory Code Protection bit
  2357                           ;	CPD = 0x1, unprogrammed default
  2358                           ;	Flash Program Memory Write Enable bits
  2359                           ;	WRT = 0x3, unprogrammed default
  2360                           ;	In-Circuit Debugger Mode bit
  2361                           ;	DEBUG = 0x1, unprogrammed default
  2362                           ;	Flash Program Memory Code Protection bit
  2363                           ;	CP = 0x1, unprogrammed default
  2364     2007                     	org	8199
  2365     2007  3FFB               	dw	16379

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     47      64
    BANK1            80      0      17
    BANK3            96     90      90
    BANK2            96      0      90

Pointer List with Targets:

    strncpy@from	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[1]), STR_3(CODE[1]), STR_2(CODE[1]), main@str2(BANK0[17]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 90
		 -> main@str2(BANK0[17]), main@str1(BANK0[17]), main@str(BANK3[90]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 90
		 -> main@str2(BANK0[17]), main@str1(BANK0[17]), main@str(BANK3[90]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 90
		 -> main@str2(BANK0[17]), main@str1(BANK0[17]), main@str(BANK3[90]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 90
		 -> main@str2(BANK0[17]), main@str1(BANK0[17]), main@str(BANK3[90]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 90
		 -> main@str2(BANK0[17]), main@str1(BANK0[17]), main@str(BANK3[90]), 

    getstr@str	PTR unsigned char  size(1) Largest target is 90
		 -> main@str(BANK3[90]), 

    puts@s	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> main@str2(BANK0[17]), main@str1(BANK0[17]), 


Critical Paths under _main in COMMON

    _strncpy->_strlen
    _puts->_putchar
    _init_uart->___lldiv
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clear_screen->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    _init_config->_init_uart

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               129   129      0    6141
                                              8 BANK0     39    39      0
                                              0 BANK3     90    90      0
                         _clcd_print
                       _clear_screen
                             _getstr
                        _init_config
                             _strlen
                            _strncpy
 ---------------------------------------------------------------------------------
 (2) _strncpy                                             13     7      6    1053
                                              4 COMMON     8     2      6
                                              0 BANK0      5     5      0
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2     394
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    1490
                          _init_clcd
                          _init_uart
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     2      0     100
                                              1 COMMON     2     2      0
                            _putchar
 ---------------------------------------------------------------------------------
 (3) _putchar                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     978
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     978
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _getstr                                               4     4      0     214
                                              0 COMMON     4     4      0
                            _getchar
 ---------------------------------------------------------------------------------
 (2) _getchar                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clear_screen                                         2     2      0     978
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           3     2      1    1263
                                              4 COMMON     3     2      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     978
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clear_screen
     _clcd_write
   _getstr
     _getchar
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_uart
       ___lldiv
     _puts
       _putchar
   _strlen
   _strncpy
     _strlen (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     113       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2F      40       5       80.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      11       7       21.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60     5A      5A       9       93.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      5A      11       93.8%
DATA                 0      0     113      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Oct 19 16:29:29 2022

                              pc 0002                   clcd_print@addr 0074                               l20 0664  
                             l23 0481                               l32 0517                               l17 05AD  
                             l35 049D                               l52 0577                               l62 0487  
                             l70 04F7                               l55 046E                               l63 048B  
                             l64 048C                               l57 0474                               l58 0476  
                             l97 0547                               fsr 0004                              l100 04BA  
                            l243 06CA                              l661 04D8                              l671 0601  
                            l941 058C                              l933 0579                              l951 05A4  
                            l943 058F                              l935 0583                              l945 059B  
                            l937 0586                              l961 0626                              l953 0602  
                            l947 059C                              l939 0587                              l971 0648  
                            l963 062D                              l955 060A                              l949 05A1  
                            l973 0658                              l965 0630                              l957 0611  
                            l981 0675                              l975 065F                              l967 0637  
                            l959 0621                              l991 06A4                              l983 0678  
                            l969 0643                              l993 06B2                              l985 0685  
                            l977 0483                              l995 06B3                              l987 0689  
                            l979 0665                              _GIE 005F                              l997 06BC  
                            l989 0692                              l999 06C2                              _RE1 0049  
                            _RE2 004A                              u310 0580                              u311 057C  
                            u410 06C2                              u411 06C1                              u324 0583  
                            u420 055A                              u340 048B                              u500 05E6  
                            u405 06B4                              u341 048A                              u501 05E5  
                            u430 0474                              u350 0675                              u510 0601  
                            u335 0593                              u431 0473                              u351 0674  
                            u511 0600                              u440 04F7                              u600 07AD  
                            u520 06CF                              u425 0555                              u441 04F6  
                            u601 07AC                              u450 0517                              u370 0689  
                            u530 06D8                              u451 0516                              u371 0688  
                            u460 0537                              u540 06E1                              u461 0536  
                            u365 067A                              u605 07A9                              u470 053D  
                            u390 06A4                              u550 0700                              u471 053C  
                            u391 06A3                              u551 06FF                              u480 04D0  
                            u560 0715                              u617 0606                              u385 068B  
                            u481 04CF                              u561 0714                              u490 05DF  
                            u570 071E                              u707 059E                              u627 0615  
                            u395 06A0                              u491 05DE                              u571 071D  
                            u580 0734                              u717 05A8                              u637 0623  
                            u581 0733                              u590 073A                              u647 0639  
                            u591 0739                              u657 0645                              u667 0653  
                            u677 0661                              u687 0498                              u697 0589  
                            fsr0 0004                              indf 0000                             l1003 0477  
                           l1011 0548                             l1005 047A                             l1013 054C  
                           l1021 04DA                             l1101 06F0                             l1031 0501  
                           l1015 046E                             l1007 047B                             l1023 04DB  
                           l1111 071E                             l1103 06F7                             l1033 050B  
                           l1017 0475                             l1041 0519                             l1009 047C  
                           l1025 04E7                             l1121 0785                             l1113 072B  
                           l1105 0700                             l1035 050F                             l1051 0537  
                           l1043 051A                             l1027 04EB                             l1131 07C9  
                           l1115 0734                             l1123 0792                             l1107 070C  
                           l1029 04F9                             l1037 048D                             l1053 053D  
                           l1045 0526                             l1061 04B8                             l1133 07CE  
                           l1117 073A                             l1109 0715                             l1125 0798  
                           l1039 0494                             l1055 0541                             l1047 052D  
                           l1063 04B9                             l1071 04D0                             l1135 07D6  
                           l1127 07AD                             l1119 077F                             l1049 0531  
                           l1057 049E                             l1065 04BB                             l1129 07AF  
                           l1059 04B2                             l1067 04C0                             l1083 05E0  
                           l1075 05AE                             l1069 04C6                             l1085 05E7  
                           l1077 05B3                             l1093 06CB                             l1087 05ED  
                           l1079 05B9                             l1095 06E5                             l1089 05F3  
                           l1097 06E9                             l1099 06EB                             STR_1 0013  
                           STR_2 0023                             STR_3 0023                             STR_4 0023  
                           _CREN 00C4                             _PEIE 005E                             _RCIF 0065  
                           _SPEN 00C7                             _TXIF 0064                             _main 06CB  
                           btemp 007E                             _puts 04D9                             start 0000  
                 clcd_write@byte 0073                   clcd_write@mode 0070                            ?_main 0070  
                          ?_puts 0070                  __end_of___lldiv 06CB                     ?_init_config 0070  
                          _RCREG 001A                            _SPBRG 0099                            _PORTD 0008  
                          _TRISD 0088                            _TXREG 0019             __end_of_clear_screen 049E  
                __end_of_getchar 0477                            main@i 004D                            main@j 004B  
                          pclath 000A                            puts@s 0072                  __end_of_putchar 048D  
                          status 0003                            wtemp0 007E                  __end_of_strncpy 0602  
                __initialization 07E2                     __end_of_main 07E2                     __end_of_puts 04F8  
                         ??_main 0028                           ??_puts 0071                           _TRISE1 0449  
                         _TRISE2 044A          _init_display_controller 0602                        ??___lldiv 0078  
                         _getstr 0518                        ??_getchar 0070                           _strlen 04BB  
                      ??_putchar 0070                        ??_strncpy 0020          __end_of__initialization 07FC  
                 __pcstackCOMMON 0070                       __pbssBANK0 004F                       __pbssBANK1 00A0  
                     __pbssBANK2 0110        ??_init_display_controller 0074                       _clcd_print 04F8  
                     _clcd_write 0578                       __pmaintext 06CB                     _clear_screen 048D  
                        ?_getstr 0070                          ?_strlen 0070                       __stringtab 0003  
                        ___lldiv 0665                          __ptext1 05AE                          __ptext2 04BB  
                        __ptext3 049E                          __ptext4 04D9                          __ptext5 0482  
                        __ptext6 0548                          __ptext7 0665                          __ptext8 0477  
                        __ptext9 0602                          _getchar 046E  __end_of_init_display_controller 0665  
              __end_of_init_clcd 0482                __end_of_init_uart 0578                          _putchar 0482  
                        clrloop0 0467                          main@str 0190                          _strncpy 05AE  
           end_of_initialization 07FC                          getstr@i 0073                          getstr@j 0071  
                    ?_clcd_print 0074                  ___lldiv@divisor 0070                      ?_clcd_write 0070  
                ___lldiv@counter 007D                          strlen@s 0070                    clcd_print@str 0076  
                 __end_of_getstr 0548                   __end_of_strlen 04D9              start_initialization 07E2  
                    putchar@data 0070                         ??_getstr 0070                         ??_strlen 0072  
                  ??_init_config 007E                        ___latbits 0002                    __pcstackBANK0 0020  
                  __pcstackBANK3 0190                         ?___lldiv 0070                        __pstrings 0003  
                       ?_getchar 0070                         ?_putchar 0070                        _init_clcd 0477  
            __end_of_init_config 04BB                        _init_uart 0548                         ?_strncpy 0074  
       ?_init_display_controller 0070                        clear_ram0 0466                      strncpy@from 0076  
                    strncpy@size 0078                     ??_clcd_print 0075                     ??_clcd_write 0071  
                    __stringbase 0012               __end_of_clcd_print 0518               __end_of_clcd_write 05AE  
                     ?_init_clcd 0070                       ?_init_uart 0020                        getstr@str 0072  
             __end_of__stringtab 0013                      _init_config 049E                         __ptext10 0518  
                       __ptext11 046E                         __ptext12 048D                         __ptext13 04F8  
                       __ptext14 0578                    ?_clear_screen 0070                         main@F960 00A0  
                       main@F956 0110                         main@F958 004F                         main@str1 0029  
                       main@str2 003A                      ??_init_clcd 0076                      ??_init_uart 0024  
                  init_uart@baud 0020                 ___lldiv@dividend 0074                        stringcode 000D  
                 ??_clear_screen 0074                        strncpy@cp 007A                        strncpy@to 0074  
               ___lldiv@quotient 0079                         strlen@cp 0072                         stringdir 000D  
                       stringtab 0003  



Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Sep 09 22:29:33 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171     0000                     	;# 
   172     0001                     	;# 
   173     0002                     	;# 
   174     0003                     	;# 
   175     0004                     	;# 
   176     0005                     	;# 
   177     0006                     	;# 
   178     0007                     	;# 
   179     0008                     	;# 
   180     0009                     	;# 
   181     000A                     	;# 
   182     000B                     	;# 
   183     000C                     	;# 
   184     000D                     	;# 
   185     000E                     	;# 
   186     000E                     	;# 
   187     000F                     	;# 
   188     0010                     	;# 
   189     0011                     	;# 
   190     0012                     	;# 
   191     0013                     	;# 
   192     0014                     	;# 
   193     0015                     	;# 
   194     0015                     	;# 
   195     0016                     	;# 
   196     0017                     	;# 
   197     0018                     	;# 
   198     0019                     	;# 
   199     001A                     	;# 
   200     001B                     	;# 
   201     001B                     	;# 
   202     001C                     	;# 
   203     001D                     	;# 
   204     001E                     	;# 
   205     001F                     	;# 
   206     0081                     	;# 
   207     0085                     	;# 
   208     0086                     	;# 
   209     0087                     	;# 
   210     0088                     	;# 
   211     0089                     	;# 
   212     008C                     	;# 
   213     008D                     	;# 
   214     008E                     	;# 
   215     0091                     	;# 
   216     0092                     	;# 
   217     0093                     	;# 
   218     0094                     	;# 
   219     0098                     	;# 
   220     0099                     	;# 
   221     009C                     	;# 
   222     009D                     	;# 
   223     009E                     	;# 
   224     009F                     	;# 
   225     010C                     	;# 
   226     010D                     	;# 
   227     010E                     	;# 
   228     010F                     	;# 
   229     018C                     	;# 
   230     018D                     	;# 
   231     0000                     	;# 
   232     0001                     	;# 
   233     0002                     	;# 
   234     0003                     	;# 
   235     0004                     	;# 
   236     0005                     	;# 
   237     0006                     	;# 
   238     0007                     	;# 
   239     0008                     	;# 
   240     0009                     	;# 
   241     000A                     	;# 
   242     000B                     	;# 
   243     000C                     	;# 
   244     000D                     	;# 
   245     000E                     	;# 
   246     000E                     	;# 
   247     000F                     	;# 
   248     0010                     	;# 
   249     0011                     	;# 
   250     0012                     	;# 
   251     0013                     	;# 
   252     0014                     	;# 
   253     0015                     	;# 
   254     0015                     	;# 
   255     0016                     	;# 
   256     0017                     	;# 
   257     0018                     	;# 
   258     0019                     	;# 
   259     001A                     	;# 
   260     001B                     	;# 
   261     001B                     	;# 
   262     001C                     	;# 
   263     001D                     	;# 
   264     001E                     	;# 
   265     001F                     	;# 
   266     0081                     	;# 
   267     0085                     	;# 
   268     0086                     	;# 
   269     0087                     	;# 
   270     0088                     	;# 
   271     0089                     	;# 
   272     008C                     	;# 
   273     008D                     	;# 
   274     008E                     	;# 
   275     0091                     	;# 
   276     0092                     	;# 
   277     0093                     	;# 
   278     0094                     	;# 
   279     0098                     	;# 
   280     0099                     	;# 
   281     009C                     	;# 
   282     009D                     	;# 
   283     009E                     	;# 
   284     009F                     	;# 
   285     010C                     	;# 
   286     010D                     	;# 
   287     010E                     	;# 
   288     010F                     	;# 
   289     018C                     	;# 
   290     018D                     	;# 
   291     000E                     _TMR1L	set	14
   292     000F                     _TMR1H	set	15
   293     0001                     _TMR0	set	1
   294     0008                     _PORTD	set	8
   295     0042                     _RD2	set	66
   296     0061                     _TMR2IF	set	97
   297     0041                     _RD1	set	65
   298     0060                     _TMR1IF	set	96
   299     0040                     _RD0	set	64
   300     005A                     _TMR0IF	set	90
   301     0092                     _TMR2ON	set	146
   302     0091                     _T2CKPS1	set	145
   303     0090                     _T2CKPS0	set	144
   304     0083                     _T1OSCEN	set	131
   305     0080                     _TMR1ON	set	128
   306     0081                     _TMR1CS	set	129
   307     005D                     _TMR0IE	set	93
   308     005F                     _GIE	set	95
   309     005E                     _PEIE	set	94
   310     0092                     _PR2	set	146
   311     0088                     _TRISD	set	136
   312     0461                     _TMR2IE	set	1121
   313     0460                     _TMR1IE	set	1120
   314     040B                     _PSA	set	1035
   315     040D                     _T0CS	set	1037
   316                           
   317                           	psect	cinit
   318     000F                     start_initialization:	
   319                           ; #config settings
   320                           
   321     000F                     __initialization:
   322                           
   323                           ; Clear objects allocated to COMMON
   324     000F  01F0               	clrf	__pbssCOMMON& (0+127)
   325     0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   326     0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   327     0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   328     0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   329     0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   330     0015                     end_of_initialization:	
   331                           ;End of C runtime variable initialization code
   332                           
   333     0015                     __end_of__initialization:
   334     0015  0183               	clrf	3
   335     0016  120A  118A  28AD   	ljmp	_main	;jump to C main() function
   336                           
   337                           	psect	bssCOMMON
   338     0070                     __pbssCOMMON:
   339     0070                     isr@count2:
   340     0070                     	ds	2
   341     0072                     isr@count1:
   342     0072                     	ds	2
   343     0074                     isr@count0:
   344     0074                     	ds	2
   345                           
   346                           	psect	cstackCOMMON
   347     0076                     __pcstackCOMMON:
   348     0076                     ?_init_timer0:
   349     0076                     ?_init_timer1:	
   350                           ; 1 bytes @ 0x0
   351                           
   352     0076                     ?_init_timer2:	
   353                           ; 1 bytes @ 0x0
   354                           
   355     0076                     ?_init_config:	
   356                           ; 1 bytes @ 0x0
   357                           
   358     0076                     ?_main:	
   359                           ; 1 bytes @ 0x0
   360                           
   361     0076                     ?_isr:	
   362                           ; 1 bytes @ 0x0
   363                           
   364     0076                     ??_isr:	
   365                           ; 1 bytes @ 0x0
   366                           
   367                           
   368                           ; 1 bytes @ 0x0
   369     0076                     	ds	2
   370     0078                     ??_init_timer0:
   371     0078                     ??_init_timer1:	
   372                           ; 1 bytes @ 0x2
   373                           
   374     0078                     ??_init_timer2:	
   375                           ; 1 bytes @ 0x2
   376                           
   377     0078                     ??_init_config:	
   378                           ; 1 bytes @ 0x2
   379                           
   380     0078                     ??_main:	
   381                           ; 1 bytes @ 0x2
   382                           
   383                           
   384                           	psect	maintext
   385     00AD                     __pmaintext:	
   386                           ; 1 bytes @ 0x2
   387 ;;
   388 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   389 ;;
   390 ;; *************** function _main *****************
   391 ;; Defined at:
   392 ;;		line 30 in file "main.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;		None
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg, status,2, status,0, pclath, cstack
   401 ;; Tracked objects:
   402 ;;		On entry : B00/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   406 ;;      Params:         0       0       0       0       0
   407 ;;      Locals:         0       0       0       0       0
   408 ;;      Temps:          0       0       0       0       0
   409 ;;      Totals:         0       0       0       0       0
   410 ;;Total ram usage:        0 bytes
   411 ;; Hardware stack levels required when called: 3
   412 ;; This function calls:
   413 ;;		_init_config
   414 ;; This function is called by:
   415 ;;		Startup code after reset
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419     00AD                     _main:	
   420                           ;psect for function _main
   421                           
   422     00AD                     l723:	
   423                           ;incstack = 0
   424                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   425                           
   426     00AD  120A  118A  2071  120A  118A  	fcall	_init_config
   427     00B2                     l22:
   428     00B2                     l23:
   429     00B2  28B2               	goto	l22
   430     00B3  120A  118A  280C   	ljmp	start
   431     00B6                     __end_of_main:
   432                           
   433                           	psect	text1
   434     0071                     __ptext1:	
   435 ;; *************** function _init_config *****************
   436 ;; Defined at:
   437 ;;		line 13 in file "main.c"
   438 ;; Parameters:    Size  Location     Type
   439 ;;		None
   440 ;; Auto vars:     Size  Location     Type
   441 ;;		None
   442 ;; Return value:  Size  Location     Type
   443 ;;                  1    wreg      void 
   444 ;; Registers used:
   445 ;;		wreg, status,2, status,0, pclath, cstack
   446 ;; Tracked objects:
   447 ;;		On entry : 0/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   451 ;;      Params:         0       0       0       0       0
   452 ;;      Locals:         0       0       0       0       0
   453 ;;      Temps:          0       0       0       0       0
   454 ;;      Totals:         0       0       0       0       0
   455 ;;Total ram usage:        0 bytes
   456 ;; Hardware stack levels used: 1
   457 ;; Hardware stack levels required when called: 2
   458 ;; This function calls:
   459 ;;		_init_timer0
   460 ;;		_init_timer1
   461 ;;		_init_timer2
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467     0071                     _init_config:	
   468                           ;psect for function _init_config
   469                           
   470     0071                     l711:	
   471                           ;incstack = 0
   472                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   473                           
   474                           
   475                           ;main.c: 15: }
   476     0071  1283               	bcf	3,5	;RP0=0, select bank0
   477     0072  1303               	bcf	3,6	;RP1=0, select bank0
   478     0073  0188               	clrf	8	;volatile
   479                           
   480                           ;main.c: 16: 
   481     0074  1683               	bsf	3,5	;RP0=1, select bank1
   482     0075  1303               	bcf	3,6	;RP1=0, select bank1
   483     0076  0188               	clrf	8	;volatile
   484     0077                     l713:
   485                           
   486                           ;main.c: 19: 
   487     0077  120A  118A  20A3  120A  118A  	fcall	_init_timer0
   488     007C                     l715:
   489                           
   490                           ;main.c: 20:     while (1) {
   491     007C  120A  118A  2096  120A  118A  	fcall	_init_timer1
   492     0081                     l717:
   493                           
   494                           ;main.c: 21:         ;
   495     0081  120A  118A  2089  120A  118A  	fcall	_init_timer2
   496     0086                     l719:
   497                           
   498                           ;main.c: 24: }
   499     0086  170B               	bsf	11,6	;volatile
   500     0087                     l721:
   501     0087  178B               	bsf	11,7	;volatile
   502     0088                     l17:
   503     0088  0008               	return
   504     0089                     __end_of_init_config:
   505                           
   506                           	psect	text2
   507     0089                     __ptext2:	
   508 ;; *************** function _init_timer2 *****************
   509 ;; Defined at:
   510 ;;		line 43 in file "timer.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0
   526 ;;      Temps:          0       0       0       0       0
   527 ;;      Totals:         0       0       0       0       0
   528 ;;Total ram usage:        0 bytes
   529 ;; Hardware stack levels used: 1
   530 ;; Hardware stack levels required when called: 1
   531 ;; This function calls:
   532 ;;		Nothing
   533 ;; This function is called by:
   534 ;;		_init_config
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538     0089                     _init_timer2:	
   539                           ;psect for function _init_timer2
   540                           
   541     0089                     l703:	
   542                           ;incstack = 0
   543                           ; Regs used in _init_timer2: [wreg]
   544                           
   545                           
   546                           ;timer.c: 46:     T2CKPS0 = 1;
   547     0089  1283               	bcf	3,5	;RP0=0, select bank0
   548     008A  1303               	bcf	3,6	;RP1=0, select bank0
   549     008B  1412               	bsf	18,0	;volatile
   550                           
   551                           ;timer.c: 47:     T2CKPS1 = 1;
   552     008C  1492               	bsf	18,1	;volatile
   553     008D                     l705:
   554                           
   555                           ;timer.c: 50:     PR2 = 250;
   556     008D  30FA               	movlw	250
   557     008E  1683               	bsf	3,5	;RP0=1, select bank1
   558     008F  1303               	bcf	3,6	;RP1=0, select bank1
   559     0090  0092               	movwf	18	;volatile
   560     0091                     l707:
   561                           
   562                           ;timer.c: 53:     TMR2IE = 1;
   563     0091  148C               	bsf	12,1	;volatile
   564     0092                     l709:
   565                           
   566                           ;timer.c: 56:     TMR2ON = 1;
   567     0092  1283               	bcf	3,5	;RP0=0, select bank0
   568     0093  1303               	bcf	3,6	;RP1=0, select bank0
   569     0094  1512               	bsf	18,2	;volatile
   570     0095                     l64:
   571     0095  0008               	return
   572     0096                     __end_of_init_timer2:
   573                           
   574                           	psect	text3
   575     0096                     __ptext3:	
   576 ;; *************** function _init_timer1 *****************
   577 ;; Defined at:
   578 ;;		line 24 in file "timer.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   592 ;;      Params:         0       0       0       0       0
   593 ;;      Locals:         0       0       0       0       0
   594 ;;      Temps:          0       0       0       0       0
   595 ;;      Totals:         0       0       0       0       0
   596 ;;Total ram usage:        0 bytes
   597 ;; Hardware stack levels used: 1
   598 ;; Hardware stack levels required when called: 1
   599 ;; This function calls:
   600 ;;		Nothing
   601 ;; This function is called by:
   602 ;;		_init_config
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606     0096                     _init_timer1:	
   607                           ;psect for function _init_timer1
   608                           
   609     0096                     l697:	
   610                           ;incstack = 0
   611                           ; Regs used in _init_timer1: [wreg]
   612                           
   613                           
   614                           ;timer.c: 27:     TMR1CS = 0;
   615     0096  1283               	bcf	3,5	;RP0=0, select bank0
   616     0097  1303               	bcf	3,6	;RP1=0, select bank0
   617     0098  1090               	bcf	16,1	;volatile
   618                           
   619                           ;timer.c: 30:     TMR1ON = 1;
   620     0099  1410               	bsf	16,0	;volatile
   621                           
   622                           ;timer.c: 32:     T1OSCEN = 1;
   623     009A  1590               	bsf	16,3	;volatile
   624     009B                     l699:
   625                           
   626                           ;timer.c: 36:     TMR1H = 0x0B;
   627     009B  300B               	movlw	11
   628     009C  008F               	movwf	15	;volatile
   629                           
   630                           ;timer.c: 37:     TMR1L = 0xDC;
   631     009D  30DC               	movlw	220
   632     009E  008E               	movwf	14	;volatile
   633     009F                     l701:
   634                           
   635                           ;timer.c: 40:     TMR1IE = 1;
   636     009F  1683               	bsf	3,5	;RP0=1, select bank1
   637     00A0  1303               	bcf	3,6	;RP1=0, select bank1
   638     00A1  140C               	bsf	12,0	;volatile
   639     00A2                     l61:
   640     00A2  0008               	return
   641     00A3                     __end_of_init_timer1:
   642                           
   643                           	psect	text4
   644     00A3                     __ptext4:	
   645 ;; *************** function _init_timer0 *****************
   646 ;; Defined at:
   647 ;;		line 10 in file "timer.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   661 ;;      Params:         0       0       0       0       0
   662 ;;      Locals:         0       0       0       0       0
   663 ;;      Temps:          0       0       0       0       0
   664 ;;      Totals:         0       0       0       0       0
   665 ;;Total ram usage:        0 bytes
   666 ;; Hardware stack levels used: 1
   667 ;; Hardware stack levels required when called: 1
   668 ;; This function calls:
   669 ;;		Nothing
   670 ;; This function is called by:
   671 ;;		_init_config
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675     00A3                     _init_timer0:	
   676                           ;psect for function _init_timer0
   677                           
   678     00A3                     l691:	
   679                           ;incstack = 0
   680                           ; Regs used in _init_timer0: [wreg]
   681                           
   682                           
   683                           ;timer.c: 13:     T0CS = 0;
   684     00A3  1683               	bsf	3,5	;RP0=1, select bank1
   685     00A4  1303               	bcf	3,6	;RP1=0, select bank1
   686     00A5  1281               	bcf	1,5	;volatile
   687                           
   688                           ;timer.c: 16:     PSA = 1;
   689     00A6  1581               	bsf	1,3	;volatile
   690     00A7                     l693:
   691                           
   692                           ;timer.c: 18:     TMR0 = 6;
   693     00A7  3006               	movlw	6
   694     00A8  1283               	bcf	3,5	;RP0=0, select bank0
   695     00A9  1303               	bcf	3,6	;RP1=0, select bank0
   696     00AA  0081               	movwf	1	;volatile
   697     00AB                     l695:
   698                           
   699                           ;timer.c: 21:     TMR0IE = 1;
   700     00AB  168B               	bsf	11,5	;volatile
   701     00AC                     l58:
   702     00AC  0008               	return
   703     00AD                     __end_of_init_timer0:
   704                           
   705                           	psect	text5
   706     0019                     __ptext5:	
   707 ;; *************** function _isr *****************
   708 ;; Defined at:
   709 ;;		line 10 in file "isr.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, status,2, status,0
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   723 ;;      Params:         0       0       0       0       0
   724 ;;      Locals:         0       0       0       0       0
   725 ;;      Temps:          2       0       0       0       0
   726 ;;      Totals:         2       0       0       0       0
   727 ;;Total ram usage:        2 bytes
   728 ;; Hardware stack levels used: 1
   729 ;; This function calls:
   730 ;;		Nothing
   731 ;; This function is called by:
   732 ;;		Interrupt level 1
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736     0019                     _isr:	
   737                           ;psect for function _isr
   738                           
   739     0019                     i1l725:
   740                           
   741                           ;isr.c: 13:     static unsigned int count0 = 0, count1 = 0, count2 = 0;;isr.c: 17:     i
      +                          f (TMR0IF == 1)
   742     0019  1D0B               	btfss	11,2	;volatile
   743     001A  281C               	goto	u1_21
   744     001B  281D               	goto	u1_20
   745     001C                     u1_21:
   746     001C  2836               	goto	i1l735
   747     001D                     u1_20:
   748     001D                     i1l727:
   749                           
   750                           ;isr.c: 18:     {;isr.c: 20:         TMR0 = TMR0 + 8;
   751     001D  1283               	bcf	3,5	;RP0=0, select bank0
   752     001E  1303               	bcf	3,6	;RP1=0, select bank0
   753     001F  0801               	movf	1,w	;volatile
   754     0020  3E08               	addlw	8
   755     0021  0081               	movwf	1	;volatile
   756                           
   757                           ;isr.c: 22:         if (++count0 == 10000)
   758     0022  3001               	movlw	1
   759     0023  07F4               	addwf	isr@count0,f
   760     0024  1803               	skipnc
   761     0025  0AF5               	incf	isr@count0+1,f
   762     0026  3000               	movlw	0
   763     0027  07F5               	addwf	isr@count0+1,f
   764     0028  3010               	movlw	16
   765     0029  0674               	xorwf	isr@count0,w
   766     002A  3027               	movlw	39
   767     002B  1903               	skipnz
   768     002C  0675               	xorwf	isr@count0+1,w
   769     002D  1D03               	btfss	3,2
   770     002E  2830               	goto	u2_21
   771     002F  2831               	goto	u2_20
   772     0030                     u2_21:
   773     0030  2835               	goto	i1l733
   774     0031                     u2_20:
   775     0031                     i1l729:
   776                           
   777                           ;isr.c: 23:         {;isr.c: 24:             count0 = 0;
   778     0031  01F4               	clrf	isr@count0
   779     0032  01F5               	clrf	isr@count0+1
   780     0033                     i1l731:
   781                           
   782                           ;isr.c: 26:             RD0 = !RD0;
   783     0033  3001               	movlw	1
   784     0034  0688               	xorwf	8,f
   785     0035                     i1l733:
   786                           
   787                           ;isr.c: 29:         TMR0IF = 0;
   788     0035  110B               	bcf	11,2	;volatile
   789     0036                     i1l735:
   790                           
   791                           ;isr.c: 36:     if (TMR1IF == 1)
   792     0036  1283               	bcf	3,5	;RP0=0, select bank0
   793     0037  1303               	bcf	3,6	;RP1=0, select bank0
   794     0038  1C0C               	btfss	12,0	;volatile
   795     0039  283B               	goto	u3_21
   796     003A  283C               	goto	u3_20
   797     003B                     u3_21:
   798     003B  2852               	goto	i1l747
   799     003C                     u3_20:
   800     003C                     i1l737:
   801                           
   802                           ;isr.c: 37:     {;isr.c: 38:         TMR1H = 0x0B;
   803     003C  300B               	movlw	11
   804     003D  008F               	movwf	15	;volatile
   805                           
   806                           ;isr.c: 39:         TMR1L = 0xDC;
   807     003E  30DC               	movlw	220
   808     003F  008E               	movwf	14	;volatile
   809     0040                     i1l739:
   810                           
   811                           ;isr.c: 41:         if (++count1 == 40)
   812     0040  3001               	movlw	1
   813     0041  07F2               	addwf	isr@count1,f
   814     0042  1803               	skipnc
   815     0043  0AF3               	incf	isr@count1+1,f
   816     0044  3000               	movlw	0
   817     0045  07F3               	addwf	isr@count1+1,f
   818     0046  3028               	movlw	40
   819     0047  0672               	xorwf	isr@count1,w
   820     0048  0473               	iorwf	isr@count1+1,w
   821     0049  1D03               	btfss	3,2
   822     004A  284C               	goto	u4_21
   823     004B  284D               	goto	u4_20
   824     004C                     u4_21:
   825     004C  2851               	goto	i1l745
   826     004D                     u4_20:
   827     004D                     i1l741:
   828                           
   829                           ;isr.c: 42:         {;isr.c: 43:             count1 = 0;
   830     004D  01F2               	clrf	isr@count1
   831     004E  01F3               	clrf	isr@count1+1
   832     004F                     i1l743:
   833                           
   834                           ;isr.c: 45:             RD1 = !RD1;
   835     004F  3002               	movlw	2
   836     0050  0688               	xorwf	8,f
   837     0051                     i1l745:
   838                           
   839                           ;isr.c: 48:         TMR1IF = 0;
   840     0051  100C               	bcf	12,0	;volatile
   841     0052                     i1l747:
   842                           
   843                           ;isr.c: 55:     if (TMR2IF == 1)
   844     0052  1C8C               	btfss	12,1	;volatile
   845     0053  2855               	goto	u5_21
   846     0054  2856               	goto	u5_20
   847     0055                     u5_21:
   848     0055  286A               	goto	i1l99
   849     0056                     u5_20:
   850     0056                     i1l749:
   851                           
   852                           ;isr.c: 56:     {;isr.c: 57:         if (++count2 == 625)
   853     0056  3001               	movlw	1
   854     0057  07F0               	addwf	isr@count2,f
   855     0058  1803               	skipnc
   856     0059  0AF1               	incf	isr@count2+1,f
   857     005A  3000               	movlw	0
   858     005B  07F1               	addwf	isr@count2+1,f
   859     005C  3071               	movlw	113
   860     005D  0670               	xorwf	isr@count2,w
   861     005E  3002               	movlw	2
   862     005F  1903               	skipnz
   863     0060  0671               	xorwf	isr@count2+1,w
   864     0061  1D03               	btfss	3,2
   865     0062  2864               	goto	u6_21
   866     0063  2865               	goto	u6_20
   867     0064                     u6_21:
   868     0064  2869               	goto	i1l755
   869     0065                     u6_20:
   870     0065                     i1l751:
   871                           
   872                           ;isr.c: 58:         {;isr.c: 59:             count2 = 0;
   873     0065  01F0               	clrf	isr@count2
   874     0066  01F1               	clrf	isr@count2+1
   875     0067                     i1l753:
   876                           
   877                           ;isr.c: 61:             RD2 = !RD2;
   878     0067  3004               	movlw	4
   879     0068  0688               	xorwf	8,f
   880     0069                     i1l755:
   881                           
   882                           ;isr.c: 64:         TMR2IF = 0;
   883     0069  108C               	bcf	12,1	;volatile
   884     006A                     i1l99:
   885     006A  0877               	movf	??_isr+1,w
   886     006B  008A               	movwf	10
   887     006C  0E76               	swapf	??_isr,w
   888     006D  0083               	movwf	3
   889     006E  0EFE               	swapf	btemp,f
   890     006F  0E7E               	swapf	btemp,w
   891     0070  0009               	retfie
   892     0071                     __end_of_isr:
   893     007E                     btemp	set	126	;btemp
   894     007E                     wtemp0	set	126
   895                           
   896                           	psect	intentry
   897     0004                     __pintentry:	
   898                           ;incstack = 0
   899                           ; Regs used in _isr: [wreg+status,2+status,0]
   900                           
   901     0004                     interrupt_function:
   902     007E                     saved_w	set	btemp
   903     0004  00FE               	movwf	btemp
   904     0005  0E03               	swapf	3,w
   905     0006  00F6               	movwf	??_isr
   906     0007  080A               	movf	10,w
   907     0008  00F7               	movwf	??_isr+1
   908     0009  120A  118A  2819   	ljmp	_isr
   909                           
   910                           	psect	config
   911                           
   912                           ;Config register CONFIG @ 0x2007
   913                           ;	Oscillator Selection bits
   914                           ;	FOSC = 0x3, unprogrammed default
   915                           ;	Watchdog Timer Enable bit
   916                           ;	WDTE = OFF, WDT disabled
   917                           ;	Power-up Timer Enable bit
   918                           ;	PWRTE = 0x1, unprogrammed default
   919                           ;	Brown-out Reset Enable bit
   920                           ;	BOREN = 0x1, unprogrammed default
   921                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   922                           ;	LVP = 0x1, unprogrammed default
   923                           ;	Data EEPROM Memory Code Protection bit
   924                           ;	CPD = 0x1, unprogrammed default
   925                           ;	Flash Program Memory Write Enable bits
   926                           ;	WRT = 0x3, unprogrammed default
   927                           ;	In-Circuit Debugger Mode bit
   928                           ;	DEBUG = 0x1, unprogrammed default
   929                           ;	Flash Program Memory Code Protection bit
   930                           ;	CP = 0x1, unprogrammed default
   931     2007                     	org	8199
   932     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                        _init_timer0
                        _init_timer1
                        _init_timer2
 ---------------------------------------------------------------------------------
 (2) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
     _init_timer0
     _init_timer1
     _init_timer2

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Sep 09 22:29:33 2022

                     l22 00B2                       l23 00B2                       l17 0088  
                     l61 00A2                       l64 0095                       l58 00AC  
                    l701 009F                      l703 0089                      l711 0071  
                    l705 008D                      l721 0087                      l713 0077  
                    l707 0091                      l715 007C                      l723 00AD  
                    l709 0092                      l717 0081                      l719 0086  
                    l691 00A3                      l693 00A7                      l695 00AB  
                    l697 0096                      l699 009B                      _GIE 005F  
                    _RD0 0040                      _RD1 0041                      _RD2 0042  
                    _PR2 0092                      _PSA 040B                      _isr 0019  
                   ?_isr 0076                     _T0CS 040D                     _PEIE 005E  
                   i1l99 006A                     _TMR0 0001                     u1_20 001D  
                   u1_21 001C                     u2_20 0031                     u2_21 0030  
                   u3_20 003C                     u3_21 003B                     u4_20 004D  
                   u4_21 004C                     u5_20 0056                     u5_21 0055  
                   u6_20 0065                     u6_21 0064                     _main 00AD  
                   btemp 007E                     start 000C                    ??_isr 0076  
                  ?_main 0076             ?_init_config 0076                    i1l731 0033  
                  i1l741 004D                    i1l733 0035                    i1l725 0019  
                  i1l751 0065                    i1l743 004F                    i1l727 001D  
                  i1l735 0036                    i1l753 0067                    i1l745 0051  
                  i1l737 003C                    i1l729 0031                    i1l755 0069  
                  i1l739 0040                    i1l747 0052                    i1l749 0056  
                  _TMR1H 000F                    _TMR1L 000E                    _PORTD 0008  
                  _TRISD 0088             ?_init_timer0 0076             ?_init_timer1 0076  
           ?_init_timer2 0076                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00B6  
                 ??_main 0078                   _TMR0IE 005D                   _TMR0IF 005A  
                 _TMR1IE 0460                   _TMR1IF 0060                   _TMR1CS 0081  
                 _TMR2IE 0461                   _TMR2IF 0061                   _TMR1ON 0080  
                 _TMR2ON 0092                   saved_w 007E  __end_of__initialization 0015  
         __pcstackCOMMON 0076               __pmaintext 00AD               __pintentry 0004  
                _T2CKPS0 0090                  _T2CKPS1 0091                  _T1OSCEN 0083  
                __ptext1 0071                  __ptext2 0089                  __ptext3 0096  
                __ptext4 00A3                  __ptext5 0019     end_of_initialization 0015  
    start_initialization 000F              __end_of_isr 0071            ??_init_config 0078  
          ??_init_timer0 0078            ??_init_timer1 0078            ??_init_timer2 0078  
            __pbssCOMMON 0070                ___latbits 0002      __end_of_init_config 0089  
    __end_of_init_timer0 00AD      __end_of_init_timer1 00A3      __end_of_init_timer2 0096  
      interrupt_function 0004                isr@count0 0074                isr@count1 0072  
              isr@count2 0070              _init_config 0071              _init_timer0 00A3  
            _init_timer1 0096              _init_timer2 0089                 intlevel1 0000  
